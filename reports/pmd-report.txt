src/main/java/com/practica/ems/covid/ContactosCovid.java:18:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/practica/ems/covid/ContactosCovid.java:18:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/practica/ems/covid/ContactosCovid.java:18:	TooManyMethods:	TooManyMethods: This class has too many methods, consider refactoring it.
src/main/java/com/practica/ems/covid/ContactosCovid.java:18:	TooManyMethods:	TooManyMethods: This class has too many methods, consider refactoring it.
src/main/java/com/practica/ems/covid/ContactosCovid.java:19:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/ems/covid/ContactosCovid.java:19:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/ems/covid/ContactosCovid.java:20:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/ems/covid/ContactosCovid.java:20:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/ems/covid/ContactosCovid.java:21:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/ems/covid/ContactosCovid.java:21:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/ems/covid/ContactosCovid.java:23:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/ems/covid/ContactosCovid.java:23:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/ems/covid/ContactosCovid.java:33:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'poblacion' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:33:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'poblacion' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:41:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'localizacion' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:41:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'localizacion' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:49:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'listaContactos' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:49:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'listaContactos' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:53:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/ems/covid/ContactosCovid.java:53:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/ems/covid/ContactosCovid.java:53:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'data' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:53:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'data' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:53:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'reset' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:53:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'reset' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:60:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'datas' could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:60:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'datas' could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:64:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/ems/covid/ContactosCovid.java:64:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/ems/covid/ContactosCovid.java:64:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'fichero' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:64:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'fichero' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:64:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'reset' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:64:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'reset' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:72:	AvoidCatchingGenericException:	AvoidCatchingGenericException: Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block
src/main/java/com/practica/ems/covid/ContactosCovid.java:72:	AvoidCatchingGenericException:	AvoidCatchingGenericException: Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block
src/main/java/com/practica/ems/covid/ContactosCovid.java:72:	AvoidPrintStackTrace:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/main/java/com/practica/ems/covid/ContactosCovid.java:72:	AvoidPrintStackTrace:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/main/java/com/practica/ems/covid/ContactosCovid.java:75:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'fichero' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:75:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'fichero' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:75:	SignatureDeclareThrowsException:	SignatureDeclareThrowsException: A method/constructor should not explicitly throw java.lang.Exception
src/main/java/com/practica/ems/covid/ContactosCovid.java:75:	SignatureDeclareThrowsException:	SignatureDeclareThrowsException: A method/constructor should not explicitly throw java.lang.Exception
src/main/java/com/practica/ems/covid/ContactosCovid.java:76:	OneDeclarationPerLine:	OneDeclarationPerLine: Use one line for each declaration, it enhances code readability.
src/main/java/com/practica/ems/covid/ContactosCovid.java:76:	OneDeclarationPerLine:	OneDeclarationPerLine: Use one line for each declaration, it enhances code readability.
src/main/java/com/practica/ems/covid/ContactosCovid.java:79:	AvoidFileStream:	AvoidFileStream: Avoid instantiating FileInputStream, FileOutputStream, FileReader, or FileWriter
src/main/java/com/practica/ems/covid/ContactosCovid.java:79:	AvoidFileStream:	AvoidFileStream: Avoid instantiating FileInputStream, FileOutputStream, FileReader, or FileWriter
src/main/java/com/practica/ems/covid/ContactosCovid.java:79:	ShortVariable:	ShortVariable: Avoid variables with short names like fr
src/main/java/com/practica/ems/covid/ContactosCovid.java:79:	ShortVariable:	ShortVariable: Avoid variables with short names like fr
src/main/java/com/practica/ems/covid/ContactosCovid.java:80:	ShortVariable:	ShortVariable: Avoid variables with short names like br
src/main/java/com/practica/ems/covid/ContactosCovid.java:80:	ShortVariable:	ShortVariable: Avoid variables with short names like br
src/main/java/com/practica/ems/covid/ContactosCovid.java:84:	AssignmentInOperand:	AssignmentInOperand: Avoid assignments in operands
src/main/java/com/practica/ems/covid/ContactosCovid.java:84:	AssignmentInOperand:	AssignmentInOperand: Avoid assignments in operands
src/main/java/com/practica/ems/covid/ContactosCovid.java:84:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'data' (lines '84'-'89').
src/main/java/com/practica/ems/covid/ContactosCovid.java:84:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'data' (lines '84'-'89').
src/main/java/com/practica/ems/covid/ContactosCovid.java:91:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/ems/covid/ContactosCovid.java:91:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/ems/covid/ContactosCovid.java:91:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'documento' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:91:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'documento' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:97:	PreserveStackTrace:	PreserveStackTrace: New exception is thrown in catch block, original stack trace may be lost
src/main/java/com/practica/ems/covid/ContactosCovid.java:97:	PreserveStackTrace:	PreserveStackTrace: New exception is thrown in catch block, original stack trace may be lost
src/main/java/com/practica/ems/covid/ContactosCovid.java:101:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/ems/covid/ContactosCovid.java:101:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/ems/covid/ContactosCovid.java:101:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'm' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:101:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'm' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:101:	ShortVariable:	ShortVariable: Avoid variables with short names like m
src/main/java/com/practica/ems/covid/ContactosCovid.java:101:	ShortVariable:	ShortVariable: Avoid variables with short names like m
src/main/java/com/practica/ems/covid/ContactosCovid.java:108:	PreserveStackTrace:	PreserveStackTrace: New exception is thrown in catch block, original stack trace may be lost
src/main/java/com/practica/ems/covid/ContactosCovid.java:108:	PreserveStackTrace:	PreserveStackTrace: New exception is thrown in catch block, original stack trace may be lost
src/main/java/com/practica/ems/covid/ContactosCovid.java:112:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/ems/covid/ContactosCovid.java:112:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/ems/covid/ContactosCovid.java:112:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'documento' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:112:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'documento' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:113:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'lista' could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:113:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'lista' could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:113:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/main/java/com/practica/ems/covid/ContactosCovid.java:113:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/main/java/com/practica/ems/covid/ContactosCovid.java:115:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/main/java/com/practica/ems/covid/ContactosCovid.java:115:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/main/java/com/practica/ems/covid/ContactosCovid.java:115:	IfElseStmtsMustUseBraces:	IfElseStmtsMustUseBraces: Avoid using if...else statements without curly braces
src/main/java/com/practica/ems/covid/ContactosCovid.java:115:	IfElseStmtsMustUseBraces:	IfElseStmtsMustUseBraces: Avoid using if...else statements without curly braces
src/main/java/com/practica/ems/covid/ContactosCovid.java:117:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/main/java/com/practica/ems/covid/ContactosCovid.java:117:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/main/java/com/practica/ems/covid/ContactosCovid.java:117:	IfElseStmtsMustUseBraces:	IfElseStmtsMustUseBraces: Avoid using if...else statements without curly braces
src/main/java/com/practica/ems/covid/ContactosCovid.java:117:	IfElseStmtsMustUseBraces:	IfElseStmtsMustUseBraces: Avoid using if...else statements without curly braces
src/main/java/com/practica/ems/covid/ContactosCovid.java:120:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/ems/covid/ContactosCovid.java:120:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/ems/covid/ContactosCovid.java:120:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'documento' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:120:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'documento' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:125:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'input' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:125:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'input' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:126:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'cadenas' could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:126:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'cadenas' could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:127:	UnnecessaryLocalBeforeReturn:	UnnecessaryLocalBeforeReturn: Consider simply returning the value vs storing it in local variable 'cadenas'
src/main/java/com/practica/ems/covid/ContactosCovid.java:127:	UnnecessaryLocalBeforeReturn:	UnnecessaryLocalBeforeReturn: Consider simply returning the value vs storing it in local variable 'cadenas'
src/main/java/com/practica/ems/covid/ContactosCovid.java:130:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'data' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:130:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'data' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:131:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'cadenas' could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:131:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'cadenas' could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:132:	UnnecessaryLocalBeforeReturn:	UnnecessaryLocalBeforeReturn: Consider simply returning the value vs storing it in local variable 'cadenas'
src/main/java/com/practica/ems/covid/ContactosCovid.java:132:	UnnecessaryLocalBeforeReturn:	UnnecessaryLocalBeforeReturn: Consider simply returning the value vs storing it in local variable 'cadenas'
src/main/java/com/practica/ems/covid/ContactosCovid.java:135:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'datas' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:135:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'datas' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:135:	UseVarargs:	UseVarargs: Consider using varargs for methods or constructors which take an array the last parameter.
src/main/java/com/practica/ems/covid/ContactosCovid.java:135:	UseVarargs:	UseVarargs: Consider using varargs for methods or constructors which take an array the last parameter.
src/main/java/com/practica/ems/covid/ContactosCovid.java:137:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'linea' could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:137:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'linea' could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:138:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'datos' could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:138:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'datos' could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:145:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'datos' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:145:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'datos' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:145:	UseVarargs:	UseVarargs: Consider using varargs for methods or constructors which take an array the last parameter.
src/main/java/com/practica/ems/covid/ContactosCovid.java:145:	UseVarargs:	UseVarargs: Consider using varargs for methods or constructors which take an array the last parameter.
src/main/java/com/practica/ems/covid/ContactosCovid.java:146:	LiteralsFirstInComparisons:	LiteralsFirstInComparisons: Position literals first in String comparisons
src/main/java/com/practica/ems/covid/ContactosCovid.java:146:	LiteralsFirstInComparisons:	LiteralsFirstInComparisons: Position literals first in String comparisons
src/main/java/com/practica/ems/covid/ContactosCovid.java:146:	LiteralsFirstInComparisons:	LiteralsFirstInComparisons: Position literals first in String comparisons
src/main/java/com/practica/ems/covid/ContactosCovid.java:146:	LiteralsFirstInComparisons:	LiteralsFirstInComparisons: Position literals first in String comparisons
src/main/java/com/practica/ems/covid/ContactosCovid.java:152:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'datos' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:152:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'datos' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:152:	UseVarargs:	UseVarargs: Consider using varargs for methods or constructors which take an array the last parameter.
src/main/java/com/practica/ems/covid/ContactosCovid.java:152:	UseVarargs:	UseVarargs: Consider using varargs for methods or constructors which take an array the last parameter.
src/main/java/com/practica/ems/covid/ContactosCovid.java:153:	LiteralsFirstInComparisons:	LiteralsFirstInComparisons: Position literals first in String comparisons
src/main/java/com/practica/ems/covid/ContactosCovid.java:153:	LiteralsFirstInComparisons:	LiteralsFirstInComparisons: Position literals first in String comparisons
src/main/java/com/practica/ems/covid/ContactosCovid.java:162:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'datos' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:162:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'datos' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:162:	UseVarargs:	UseVarargs: Consider using varargs for methods or constructors which take an array the last parameter.
src/main/java/com/practica/ems/covid/ContactosCovid.java:162:	UseVarargs:	UseVarargs: Consider using varargs for methods or constructors which take an array the last parameter.
src/main/java/com/practica/ems/covid/ContactosCovid.java:163:	LiteralsFirstInComparisons:	LiteralsFirstInComparisons: Position literals first in String comparisons
src/main/java/com/practica/ems/covid/ContactosCovid.java:163:	LiteralsFirstInComparisons:	LiteralsFirstInComparisons: Position literals first in String comparisons
src/main/java/com/practica/ems/covid/ContactosCovid.java:171:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'datos' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:171:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'datos' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:171:	UseVarargs:	UseVarargs: Consider using varargs for methods or constructors which take an array the last parameter.
src/main/java/com/practica/ems/covid/ContactosCovid.java:171:	UseVarargs:	UseVarargs: Consider using varargs for methods or constructors which take an array the last parameter.
src/main/java/com/practica/ems/covid/ContactosCovid.java:172:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'pp' could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:172:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'pp' could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:172:	ShortVariable:	ShortVariable: Avoid variables with short names like pp
src/main/java/com/practica/ems/covid/ContactosCovid.java:172:	ShortVariable:	ShortVariable: Avoid variables with short names like pp
src/main/java/com/practica/ems/covid/ContactosCovid.java:177:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/ems/covid/ContactosCovid.java:177:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/ems/covid/ContactosCovid.java:177:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'fecha' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:177:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'fecha' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:178:	OneDeclarationPerLine:	OneDeclarationPerLine: Use one line for each declaration, it enhances code readability.
src/main/java/com/practica/ems/covid/ContactosCovid.java:178:	OneDeclarationPerLine:	OneDeclarationPerLine: Use one line for each declaration, it enhances code readability.
src/main/java/com/practica/ems/covid/ContactosCovid.java:179:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'valores' could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:179:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'valores' could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:184:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'fechaHora' could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:184:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'fechaHora' could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:185:	UnnecessaryLocalBeforeReturn:	UnnecessaryLocalBeforeReturn: Consider simply returning the value vs storing it in local variable 'fechaHora'
src/main/java/com/practica/ems/covid/ContactosCovid.java:185:	UnnecessaryLocalBeforeReturn:	UnnecessaryLocalBeforeReturn: Consider simply returning the value vs storing it in local variable 'fechaHora'
src/main/java/com/practica/ems/covid/ContactosCovid.java:188:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/ems/covid/ContactosCovid.java:188:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/ems/covid/ContactosCovid.java:188:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'fecha' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:188:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'fecha' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:188:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'hora' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:188:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'hora' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:189:	OneDeclarationPerLine:	OneDeclarationPerLine: Use one line for each declaration, it enhances code readability.
src/main/java/com/practica/ems/covid/ContactosCovid.java:189:	OneDeclarationPerLine:	OneDeclarationPerLine: Use one line for each declaration, it enhances code readability.
src/main/java/com/practica/ems/covid/ContactosCovid.java:194:	OneDeclarationPerLine:	OneDeclarationPerLine: Use one line for each declaration, it enhances code readability.
src/main/java/com/practica/ems/covid/ContactosCovid.java:194:	OneDeclarationPerLine:	OneDeclarationPerLine: Use one line for each declaration, it enhances code readability.
src/main/java/com/practica/ems/covid/ContactosCovid.java:198:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'fechaHora' could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:198:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'fechaHora' could be declared final
src/main/java/com/practica/ems/covid/ContactosCovid.java:199:	UnnecessaryLocalBeforeReturn:	UnnecessaryLocalBeforeReturn: Consider simply returning the value vs storing it in local variable 'fechaHora'
src/main/java/com/practica/ems/covid/ContactosCovid.java:199:	UnnecessaryLocalBeforeReturn:	UnnecessaryLocalBeforeReturn: Consider simply returning the value vs storing it in local variable 'fechaHora'
src/main/java/com/practica/ems/covid/Localizacion.java:13:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/practica/ems/covid/Localizacion.java:13:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/practica/ems/covid/Localizacion.java:14:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the lista field if you want a default access modifier
src/main/java/com/practica/ems/covid/Localizacion.java:14:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the lista field if you want a default access modifier
src/main/java/com/practica/ems/covid/Localizacion.java:14:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/ems/covid/Localizacion.java:14:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/ems/covid/Localizacion.java:14:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/com/practica/ems/covid/Localizacion.java:14:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/com/practica/ems/covid/Localizacion.java:14:	LooseCoupling:	LooseCoupling: Avoid using implementation types like 'LinkedList'; use the interface instead
src/main/java/com/practica/ems/covid/Localizacion.java:14:	LooseCoupling:	LooseCoupling: Avoid using implementation types like 'LinkedList'; use the interface instead
src/main/java/com/practica/ems/covid/Localizacion.java:16:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/ems/covid/Localizacion.java:16:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/ems/covid/Localizacion.java:18:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/main/java/com/practica/ems/covid/Localizacion.java:18:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/main/java/com/practica/ems/covid/Localizacion.java:21:	LooseCoupling:	LooseCoupling: Avoid using implementation types like 'LinkedList'; use the interface instead
src/main/java/com/practica/ems/covid/Localizacion.java:21:	LooseCoupling:	LooseCoupling: Avoid using implementation types like 'LinkedList'; use the interface instead
src/main/java/com/practica/ems/covid/Localizacion.java:25:	LooseCoupling:	LooseCoupling: Avoid using implementation types like 'LinkedList'; use the interface instead
src/main/java/com/practica/ems/covid/Localizacion.java:25:	LooseCoupling:	LooseCoupling: Avoid using implementation types like 'LinkedList'; use the interface instead
src/main/java/com/practica/ems/covid/Localizacion.java:25:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'lista' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/Localizacion.java:25:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'lista' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/Localizacion.java:29:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/ems/covid/Localizacion.java:29:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/ems/covid/Localizacion.java:29:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'p' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/Localizacion.java:29:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'p' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/Localizacion.java:29:	ShortVariable:	ShortVariable: Avoid variables with short names like p
src/main/java/com/practica/ems/covid/Localizacion.java:29:	ShortVariable:	ShortVariable: Avoid variables with short names like p
src/main/java/com/practica/ems/covid/Localizacion.java:38:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/ems/covid/Localizacion.java:38:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/ems/covid/Localizacion.java:38:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'documento' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/Localizacion.java:38:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'documento' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/Localizacion.java:38:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'fecha' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/Localizacion.java:38:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'fecha' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/Localizacion.java:39:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'cont' (lines '39'-'42').
src/main/java/com/practica/ems/covid/Localizacion.java:39:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'cont' (lines '39'-'42').
src/main/java/com/practica/ems/covid/Localizacion.java:39:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'cont' (lines '39'-'51').
src/main/java/com/practica/ems/covid/Localizacion.java:39:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'cont' (lines '39'-'51').
src/main/java/com/practica/ems/covid/Localizacion.java:40:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'it' could be declared final
src/main/java/com/practica/ems/covid/Localizacion.java:40:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'it' could be declared final
src/main/java/com/practica/ems/covid/Localizacion.java:40:	ShortVariable:	ShortVariable: Avoid variables with short names like it
src/main/java/com/practica/ems/covid/Localizacion.java:40:	ShortVariable:	ShortVariable: Avoid variables with short names like it
src/main/java/com/practica/ems/covid/Localizacion.java:42:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'cont' (lines '42'-'42').
src/main/java/com/practica/ems/covid/Localizacion.java:42:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'cont' (lines '42'-'42').
src/main/java/com/practica/ems/covid/Localizacion.java:42:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'cont' (lines '42'-'51').
src/main/java/com/practica/ems/covid/Localizacion.java:42:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'cont' (lines '42'-'51').
src/main/java/com/practica/ems/covid/Localizacion.java:43:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'pp' could be declared final
src/main/java/com/practica/ems/covid/Localizacion.java:43:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'pp' could be declared final
src/main/java/com/practica/ems/covid/Localizacion.java:43:	ShortVariable:	ShortVariable: Avoid variables with short names like pp
src/main/java/com/practica/ems/covid/Localizacion.java:43:	ShortVariable:	ShortVariable: Avoid variables with short names like pp
src/main/java/com/practica/ems/covid/Localizacion.java:44:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'fechaHora' could be declared final
src/main/java/com/practica/ems/covid/Localizacion.java:44:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'fechaHora' could be declared final
src/main/java/com/practica/ems/covid/Localizacion.java:45:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/ems/covid/Localizacion.java:45:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/ems/covid/Localizacion.java:45:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/practica/ems/covid/Localizacion.java:45:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/practica/ems/covid/Localizacion.java:46:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/ems/covid/Localizacion.java:46:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/ems/covid/Localizacion.java:46:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/practica/ems/covid/Localizacion.java:46:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/practica/ems/covid/Localizacion.java:53:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/ems/covid/Localizacion.java:53:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/ems/covid/Localizacion.java:53:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'documento' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/Localizacion.java:53:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'documento' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/Localizacion.java:53:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'lista' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/Localizacion.java:53:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'lista' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/Localizacion.java:54:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'cont' (lines '54'-'59').
src/main/java/com/practica/ems/covid/Localizacion.java:54:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'cont' (lines '54'-'59').
src/main/java/com/practica/ems/covid/Localizacion.java:55:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'it' could be declared final
src/main/java/com/practica/ems/covid/Localizacion.java:55:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'it' could be declared final
src/main/java/com/practica/ems/covid/Localizacion.java:55:	ShortVariable:	ShortVariable: Avoid variables with short names like it
src/main/java/com/practica/ems/covid/Localizacion.java:55:	ShortVariable:	ShortVariable: Avoid variables with short names like it
src/main/java/com/practica/ems/covid/Localizacion.java:57:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'pp' could be declared final
src/main/java/com/practica/ems/covid/Localizacion.java:57:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'pp' could be declared final
src/main/java/com/practica/ems/covid/Localizacion.java:57:	ShortVariable:	ShortVariable: Avoid variables with short names like pp
src/main/java/com/practica/ems/covid/Localizacion.java:57:	ShortVariable:	ShortVariable: Avoid variables with short names like pp
src/main/java/com/practica/ems/covid/Localizacion.java:58:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/ems/covid/Localizacion.java:58:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/ems/covid/Localizacion.java:58:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/practica/ems/covid/Localizacion.java:58:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/practica/ems/covid/Localizacion.java:59:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'cont' (lines '59'-'59').
src/main/java/com/practica/ems/covid/Localizacion.java:59:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'cont' (lines '59'-'59').
src/main/java/com/practica/ems/covid/Localizacion.java:66:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/ems/covid/Localizacion.java:66:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/ems/covid/Localizacion.java:66:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'documento' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/Localizacion.java:66:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'documento' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/Localizacion.java:66:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'fecha' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/Localizacion.java:66:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'fecha' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/Localizacion.java:67:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'pos' (lines '67'-'69').
src/main/java/com/practica/ems/covid/Localizacion.java:67:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'pos' (lines '67'-'69').
src/main/java/com/practica/ems/covid/Localizacion.java:67:	UnusedAssignment:	UnusedAssignment: The initializer for variable 'pos' is never used (overwritten on line 69)
src/main/java/com/practica/ems/covid/Localizacion.java:67:	UnusedAssignment:	UnusedAssignment: The initializer for variable 'pos' is never used (overwritten on line 69)
src/main/java/com/practica/ems/covid/Localizacion.java:69:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'pos' (lines '69'-'74').
src/main/java/com/practica/ems/covid/Localizacion.java:69:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'pos' (lines '69'-'74').
src/main/java/com/practica/ems/covid/Localizacion.java:71:	PreserveStackTrace:	PreserveStackTrace: New exception is thrown in catch block, original stack trace may be lost
src/main/java/com/practica/ems/covid/Localizacion.java:71:	PreserveStackTrace:	PreserveStackTrace: New exception is thrown in catch block, original stack trace may be lost
src/main/java/com/practica/ems/covid/Localizacion.java:76:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the printLocalizacion method if you want a default access modifier
src/main/java/com/practica/ems/covid/Localizacion.java:76:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the printLocalizacion method if you want a default access modifier
src/main/java/com/practica/ems/covid/Localizacion.java:76:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/com/practica/ems/covid/Localizacion.java:76:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/com/practica/ems/covid/Localizacion.java:77:	SystemPrintln:	SystemPrintln: System.out.printf is used
src/main/java/com/practica/ems/covid/Localizacion.java:77:	SystemPrintln:	SystemPrintln: System.out.printf is used
src/main/java/com/practica/ems/covid/Localizacion.java:84:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'pp' could be declared final
src/main/java/com/practica/ems/covid/Localizacion.java:84:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'pp' could be declared final
src/main/java/com/practica/ems/covid/Localizacion.java:84:	ShortVariable:	ShortVariable: Avoid variables with short names like pp
src/main/java/com/practica/ems/covid/Localizacion.java:84:	ShortVariable:	ShortVariable: Avoid variables with short names like pp
src/main/java/com/practica/ems/covid/Localizacion.java:85:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/practica/ems/covid/Localizacion.java:85:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/practica/ems/covid/Localizacion.java:85:	UseStringBufferForStringAppends:	UseStringBufferForStringAppends: Prefer StringBuilder (non-synchronized) or StringBuffer (synchronized) over += for concatenating strings
src/main/java/com/practica/ems/covid/Localizacion.java:85:	UseStringBufferForStringAppends:	UseStringBufferForStringAppends: Prefer StringBuilder (non-synchronized) or StringBuffer (synchronized) over += for concatenating strings
src/main/java/com/practica/ems/covid/Poblacion.java:10:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/practica/ems/covid/Poblacion.java:10:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/practica/ems/covid/Poblacion.java:11:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the lista field if you want a default access modifier
src/main/java/com/practica/ems/covid/Poblacion.java:11:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the lista field if you want a default access modifier
src/main/java/com/practica/ems/covid/Poblacion.java:11:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/ems/covid/Poblacion.java:11:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/ems/covid/Poblacion.java:11:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/com/practica/ems/covid/Poblacion.java:11:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/com/practica/ems/covid/Poblacion.java:11:	LooseCoupling:	LooseCoupling: Avoid using implementation types like 'LinkedList'; use the interface instead
src/main/java/com/practica/ems/covid/Poblacion.java:11:	LooseCoupling:	LooseCoupling: Avoid using implementation types like 'LinkedList'; use the interface instead
src/main/java/com/practica/ems/covid/Poblacion.java:13:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/ems/covid/Poblacion.java:13:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/ems/covid/Poblacion.java:15:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/main/java/com/practica/ems/covid/Poblacion.java:15:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/main/java/com/practica/ems/covid/Poblacion.java:18:	LooseCoupling:	LooseCoupling: Avoid using implementation types like 'LinkedList'; use the interface instead
src/main/java/com/practica/ems/covid/Poblacion.java:18:	LooseCoupling:	LooseCoupling: Avoid using implementation types like 'LinkedList'; use the interface instead
src/main/java/com/practica/ems/covid/Poblacion.java:22:	LooseCoupling:	LooseCoupling: Avoid using implementation types like 'LinkedList'; use the interface instead
src/main/java/com/practica/ems/covid/Poblacion.java:22:	LooseCoupling:	LooseCoupling: Avoid using implementation types like 'LinkedList'; use the interface instead
src/main/java/com/practica/ems/covid/Poblacion.java:22:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'lista' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/Poblacion.java:22:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'lista' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/Poblacion.java:26:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/ems/covid/Poblacion.java:26:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/ems/covid/Poblacion.java:26:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'persona' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/Poblacion.java:26:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'persona' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/Poblacion.java:35:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/ems/covid/Poblacion.java:35:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/ems/covid/Poblacion.java:35:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'documento' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/Poblacion.java:35:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'documento' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/Poblacion.java:36:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'cont' (lines '36'-'43').
src/main/java/com/practica/ems/covid/Poblacion.java:36:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'cont' (lines '36'-'43').
src/main/java/com/practica/ems/covid/Poblacion.java:36:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'pos' (lines '36'-'41').
src/main/java/com/practica/ems/covid/Poblacion.java:36:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'pos' (lines '36'-'41').
src/main/java/com/practica/ems/covid/Poblacion.java:36:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'cont' (lines '36'-'49').
src/main/java/com/practica/ems/covid/Poblacion.java:36:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'cont' (lines '36'-'49').
src/main/java/com/practica/ems/covid/Poblacion.java:36:	OneDeclarationPerLine:	OneDeclarationPerLine: Use one line for each declaration, it enhances code readability.
src/main/java/com/practica/ems/covid/Poblacion.java:36:	OneDeclarationPerLine:	OneDeclarationPerLine: Use one line for each declaration, it enhances code readability.
src/main/java/com/practica/ems/covid/Poblacion.java:37:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'it' could be declared final
src/main/java/com/practica/ems/covid/Poblacion.java:37:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'it' could be declared final
src/main/java/com/practica/ems/covid/Poblacion.java:37:	ShortVariable:	ShortVariable: Avoid variables with short names like it
src/main/java/com/practica/ems/covid/Poblacion.java:37:	ShortVariable:	ShortVariable: Avoid variables with short names like it
src/main/java/com/practica/ems/covid/Poblacion.java:39:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'persona' could be declared final
src/main/java/com/practica/ems/covid/Poblacion.java:39:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'persona' could be declared final
src/main/java/com/practica/ems/covid/Poblacion.java:40:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/ems/covid/Poblacion.java:40:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/ems/covid/Poblacion.java:40:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/practica/ems/covid/Poblacion.java:40:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/practica/ems/covid/Poblacion.java:41:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'pos' (lines '41'-'41').
src/main/java/com/practica/ems/covid/Poblacion.java:41:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'pos' (lines '41'-'41').
src/main/java/com/practica/ems/covid/Poblacion.java:43:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'cont' (lines '43'-'43').
src/main/java/com/practica/ems/covid/Poblacion.java:43:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'cont' (lines '43'-'43').
src/main/java/com/practica/ems/covid/Poblacion.java:43:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'cont' (lines '43'-'49').
src/main/java/com/practica/ems/covid/Poblacion.java:43:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'cont' (lines '43'-'49').
src/main/java/com/practica/ems/covid/Poblacion.java:51:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/ems/covid/Poblacion.java:51:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/ems/covid/Poblacion.java:51:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'documento' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/Poblacion.java:51:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'documento' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/Poblacion.java:52:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'cont' (lines '52'-'56').
src/main/java/com/practica/ems/covid/Poblacion.java:52:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'cont' (lines '52'-'56').
src/main/java/com/practica/ems/covid/Poblacion.java:52:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'cont' (lines '52'-'62').
src/main/java/com/practica/ems/covid/Poblacion.java:52:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'cont' (lines '52'-'62').
src/main/java/com/practica/ems/covid/Poblacion.java:53:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'it' could be declared final
src/main/java/com/practica/ems/covid/Poblacion.java:53:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'it' could be declared final
src/main/java/com/practica/ems/covid/Poblacion.java:53:	ShortVariable:	ShortVariable: Avoid variables with short names like it
src/main/java/com/practica/ems/covid/Poblacion.java:53:	ShortVariable:	ShortVariable: Avoid variables with short names like it
src/main/java/com/practica/ems/covid/Poblacion.java:55:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'persona' could be declared final
src/main/java/com/practica/ems/covid/Poblacion.java:55:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'persona' could be declared final
src/main/java/com/practica/ems/covid/Poblacion.java:56:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'cont' (lines '56'-'56').
src/main/java/com/practica/ems/covid/Poblacion.java:56:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'cont' (lines '56'-'56').
src/main/java/com/practica/ems/covid/Poblacion.java:56:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'cont' (lines '56'-'62').
src/main/java/com/practica/ems/covid/Poblacion.java:56:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'cont' (lines '56'-'62').
src/main/java/com/practica/ems/covid/Poblacion.java:57:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/ems/covid/Poblacion.java:57:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/ems/covid/Poblacion.java:57:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/practica/ems/covid/Poblacion.java:57:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/practica/ems/covid/Poblacion.java:64:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/ems/covid/Poblacion.java:64:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/ems/covid/Poblacion.java:65:	SystemPrintln:	SystemPrintln: System.out.printf is used
src/main/java/com/practica/ems/covid/Poblacion.java:65:	SystemPrintln:	SystemPrintln: System.out.printf is used
src/main/java/com/practica/ems/covid/Poblacion.java:71:	ForLoopCanBeForeach:	ForLoopCanBeForeach: This for loop can be replaced by a foreach loop
src/main/java/com/practica/ems/covid/Poblacion.java:71:	ForLoopCanBeForeach:	ForLoopCanBeForeach: This for loop can be replaced by a foreach loop
src/main/java/com/practica/ems/covid/Poblacion.java:72:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/ems/covid/Poblacion.java:72:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/ems/covid/Poblacion.java:72:	UseStringBufferForStringAppends:	UseStringBufferForStringAppends: Prefer StringBuilder (non-synchronized) or StringBuffer (synchronized) over += for concatenating strings
src/main/java/com/practica/ems/covid/Poblacion.java:72:	UseStringBufferForStringAppends:	UseStringBufferForStringAppends: Prefer StringBuilder (non-synchronized) or StringBuffer (synchronized) over += for concatenating strings
src/main/java/com/practica/ems/covid/Principal.java:5:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/practica/ems/covid/Principal.java:5:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/practica/ems/covid/Principal.java:5:	UseUtilityClass:	UseUtilityClass: All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
src/main/java/com/practica/ems/covid/Principal.java:5:	UseUtilityClass:	UseUtilityClass: All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
src/main/java/com/practica/ems/covid/Principal.java:8:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/ems/covid/Principal.java:8:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/ems/covid/Principal.java:8:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'args' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/Principal.java:8:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'args' is not assigned and could be declared final
src/main/java/com/practica/ems/covid/Principal.java:9:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contactosCovid' could be declared final
src/main/java/com/practica/ems/covid/Principal.java:9:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'contactosCovid' could be declared final
src/main/java/com/practica/ems/covid/Principal.java:11:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/ems/covid/Principal.java:11:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/ems/covid/Principal.java:11:	SystemPrintln:	SystemPrintln: System.out.println is used
src/main/java/com/practica/ems/covid/Principal.java:11:	SystemPrintln:	SystemPrintln: System.out.println is used
src/main/java/com/practica/ems/covid/Principal.java:12:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/ems/covid/Principal.java:12:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/ems/covid/Principal.java:12:	SystemPrintln:	SystemPrintln: System.out.println is used
src/main/java/com/practica/ems/covid/Principal.java:12:	SystemPrintln:	SystemPrintln: System.out.println is used
src/main/java/com/practica/ems/covid/Principal.java:14:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/ems/covid/Principal.java:14:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/ems/covid/Principal.java:14:	SystemPrintln:	SystemPrintln: System.out.println is used
src/main/java/com/practica/ems/covid/Principal.java:14:	SystemPrintln:	SystemPrintln: System.out.println is used
src/main/java/com/practica/ems/covid/Principal.java:15:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/ems/covid/Principal.java:15:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/ems/covid/Principal.java:15:	SystemPrintln:	SystemPrintln: System.out.println is used
src/main/java/com/practica/ems/covid/Principal.java:15:	SystemPrintln:	SystemPrintln: System.out.println is used
src/main/java/com/practica/ems/covid/Principal.java:16:	SystemPrintln:	SystemPrintln: System.out.println is used
src/main/java/com/practica/ems/covid/Principal.java:16:	SystemPrintln:	SystemPrintln: System.out.println is used
src/main/java/com/practica/excecption/EmsBaseException.java:3:	AbstractNaming:	AbstractNaming: Abstract classes should be named AbstractXXX
src/main/java/com/practica/excecption/EmsBaseException.java:3:	AbstractNaming:	AbstractNaming: Abstract classes should be named AbstractXXX
src/main/java/com/practica/excecption/EmsBaseException.java:3:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/practica/excecption/EmsBaseException.java:3:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/practica/excecption/EmsBaseException.java:5:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/practica/excecption/EmsBaseException.java:5:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/practica/excecption/EmsBaseException.java:5:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/excecption/EmsBaseException.java:5:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/excecption/EmsBaseException.java:5:	ImmutableField:	ImmutableField: Private field 'message' could be made final; it is only initialized in the declaration or constructor.
src/main/java/com/practica/excecption/EmsBaseException.java:5:	ImmutableField:	ImmutableField: Private field 'message' could be made final; it is only initialized in the declaration or constructor.
src/main/java/com/practica/excecption/EmsBaseException.java:7:	CallSuperInConstructor:	CallSuperInConstructor: It is a good practice to call super() in a constructor
src/main/java/com/practica/excecption/EmsBaseException.java:7:	CallSuperInConstructor:	CallSuperInConstructor: It is a good practice to call super() in a constructor
src/main/java/com/practica/excecption/EmsBaseException.java:7:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/excecption/EmsBaseException.java:7:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/excecption/EmsBaseException.java:7:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'message' is not assigned and could be declared final
src/main/java/com/practica/excecption/EmsBaseException.java:7:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'message' is not assigned and could be declared final
src/main/java/com/practica/excecption/EmsBaseException.java:12:	MissingOverride:	MissingOverride: The method 'getMessage()' is missing an @Override annotation.
src/main/java/com/practica/excecption/EmsBaseException.java:12:	MissingOverride:	MissingOverride: The method 'getMessage()' is missing an @Override annotation.
src/main/java/com/practica/excecption/EmsExceptions.java:3:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/com/practica/excecption/EmsExceptions.java:3:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/com/practica/excecption/EmsExceptions.java:3:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/practica/excecption/EmsExceptions.java:3:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/practica/excecption/EmsExceptions.java:4:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/practica/excecption/EmsExceptions.java:4:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/practica/excecption/EmsExceptions.java:6:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/excecption/EmsExceptions.java:6:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/excecption/EmsExceptions.java:9:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/excecption/EmsExceptions.java:9:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/excecption/EmsExceptions.java:9:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'message' is not assigned and could be declared final
src/main/java/com/practica/excecption/EmsExceptions.java:9:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'message' is not assigned and could be declared final
src/main/java/com/practica/excecption/EmsExceptions.java:14:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/practica/excecption/EmsExceptions.java:14:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/practica/excecption/EmsExceptions.java:16:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/excecption/EmsExceptions.java:16:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/excecption/EmsExceptions.java:19:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/excecption/EmsExceptions.java:19:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/excecption/EmsExceptions.java:19:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'message' is not assigned and could be declared final
src/main/java/com/practica/excecption/EmsExceptions.java:19:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'message' is not assigned and could be declared final
src/main/java/com/practica/excecption/EmsExceptions.java:24:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/practica/excecption/EmsExceptions.java:24:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/practica/excecption/EmsExceptions.java:27:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/excecption/EmsExceptions.java:27:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/excecption/EmsExceptions.java:30:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/excecption/EmsExceptions.java:30:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/excecption/EmsExceptions.java:30:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'message' is not assigned and could be declared final
src/main/java/com/practica/excecption/EmsExceptions.java:30:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'message' is not assigned and could be declared final
src/main/java/com/practica/excecption/EmsExceptions.java:34:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/practica/excecption/EmsExceptions.java:34:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/practica/excecption/EmsExceptions.java:36:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/excecption/EmsExceptions.java:36:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/excecption/EmsExceptions.java:39:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/excecption/EmsExceptions.java:39:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/excecption/EmsExceptions.java:39:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'message' is not assigned and could be declared final
src/main/java/com/practica/excecption/EmsExceptions.java:39:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'message' is not assigned and could be declared final
src/main/java/com/practica/excecption/EmsExceptions.java:43:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/practica/excecption/EmsExceptions.java:43:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/practica/excecption/EmsExceptions.java:45:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/excecption/EmsExceptions.java:45:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/excecption/EmsExceptions.java:48:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/excecption/EmsExceptions.java:48:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/excecption/EmsExceptions.java:48:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'message' is not assigned and could be declared final
src/main/java/com/practica/excecption/EmsExceptions.java:48:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'message' is not assigned and could be declared final
src/main/java/com/practica/excecption/EmsExceptions.java:52:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/practica/excecption/EmsExceptions.java:52:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/practica/excecption/EmsExceptions.java:54:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/excecption/EmsExceptions.java:54:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/excecption/EmsExceptions.java:57:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/excecption/EmsExceptions.java:57:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/excecption/EmsExceptions.java:57:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'message' is not assigned and could be declared final
src/main/java/com/practica/excecption/EmsExceptions.java:57:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'message' is not assigned and could be declared final
src/main/java/com/practica/genericas/Constantes.java:4:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/practica/genericas/Constantes.java:4:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/practica/genericas/Constantes.java:5:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/genericas/Constantes.java:5:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/genericas/Constantes.java:5:	ConstantsInInterface:	ConstantsInInterface: Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
src/main/java/com/practica/genericas/Constantes.java:5:	ConstantsInInterface:	ConstantsInInterface: Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
src/main/java/com/practica/genericas/Constantes.java:5:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on field 'MAX_DATOS_PERSONA': the field is declared in an interface type
src/main/java/com/practica/genericas/Constantes.java:5:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on field 'MAX_DATOS_PERSONA': the field is declared in an interface type
src/main/java/com/practica/genericas/Constantes.java:6:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/genericas/Constantes.java:6:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/genericas/Constantes.java:6:	ConstantsInInterface:	ConstantsInInterface: Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
src/main/java/com/practica/genericas/Constantes.java:6:	ConstantsInInterface:	ConstantsInInterface: Avoid constants in interfaces. Interfaces define types, constants are implementation details better placed in classes or enums. See Effective Java, item 19.
src/main/java/com/practica/genericas/Constantes.java:6:	LongVariable:	LongVariable: Avoid excessively long variable names like MAX_DATOS_LOCALIZACION
src/main/java/com/practica/genericas/Constantes.java:6:	LongVariable:	LongVariable: Avoid excessively long variable names like MAX_DATOS_LOCALIZACION
src/main/java/com/practica/genericas/Constantes.java:6:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on field 'MAX_DATOS_LOCALIZACION': the field is declared in an interface type
src/main/java/com/practica/genericas/Constantes.java:6:	UnnecessaryModifier:	UnnecessaryModifier: Unnecessary modifier 'public' on field 'MAX_DATOS_LOCALIZACION': the field is declared in an interface type
src/main/java/com/practica/genericas/Coordenada.java:4:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/practica/genericas/Coordenada.java:4:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/practica/genericas/Coordenada.java:5:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/genericas/Coordenada.java:5:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/genericas/Coordenada.java:6:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/genericas/Coordenada.java:6:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/genericas/Coordenada.java:9:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/genericas/Coordenada.java:9:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/genericas/Coordenada.java:13:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/genericas/Coordenada.java:13:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/genericas/Coordenada.java:13:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'latitud' is not assigned and could be declared final
src/main/java/com/practica/genericas/Coordenada.java:13:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'latitud' is not assigned and could be declared final
src/main/java/com/practica/genericas/Coordenada.java:13:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'longitud' is not assigned and could be declared final
src/main/java/com/practica/genericas/Coordenada.java:13:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'longitud' is not assigned and could be declared final
src/main/java/com/practica/genericas/Coordenada.java:22:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'latitud' is not assigned and could be declared final
src/main/java/com/practica/genericas/Coordenada.java:22:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'latitud' is not assigned and could be declared final
src/main/java/com/practica/genericas/Coordenada.java:30:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'longitud' is not assigned and could be declared final
src/main/java/com/practica/genericas/Coordenada.java:30:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'longitud' is not assigned and could be declared final
src/main/java/com/practica/genericas/Coordenada.java:36:	AvoidFinalLocalVariable:	AvoidFinalLocalVariable: Avoid using final local variables, turn them into fields
src/main/java/com/practica/genericas/Coordenada.java:36:	AvoidFinalLocalVariable:	AvoidFinalLocalVariable: Avoid using final local variables, turn them into fields
src/main/java/com/practica/genericas/Coordenada.java:44:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'obj' is not assigned and could be declared final
src/main/java/com/practica/genericas/Coordenada.java:44:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'obj' is not assigned and could be declared final
src/main/java/com/practica/genericas/Coordenada.java:45:	UselessParentheses:	UselessParentheses: Useless parentheses.
src/main/java/com/practica/genericas/Coordenada.java:45:	UselessParentheses:	UselessParentheses: Useless parentheses.
src/main/java/com/practica/genericas/Coordenada.java:45:	UselessParentheses:	UselessParentheses: Useless parentheses.
src/main/java/com/practica/genericas/Coordenada.java:45:	UselessParentheses:	UselessParentheses: Useless parentheses.
src/main/java/com/practica/genericas/Coordenada.java:46:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'other' could be declared final
src/main/java/com/practica/genericas/Coordenada.java:46:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'other' could be declared final
src/main/java/com/practica/genericas/Coordenada.java:47:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/practica/genericas/Coordenada.java:47:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/practica/genericas/Coordenada.java:47:	OnlyOneReturn:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/main/java/com/practica/genericas/Coordenada.java:47:	OnlyOneReturn:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/main/java/com/practica/genericas/Coordenada.java:48:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/practica/genericas/Coordenada.java:48:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/practica/genericas/Fecha.java:5:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/practica/genericas/Fecha.java:5:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/practica/genericas/Fecha.java:6:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/genericas/Fecha.java:6:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/genericas/Fecha.java:6:	OneDeclarationPerLine:	OneDeclarationPerLine: Use one line for each declaration, it enhances code readability.
src/main/java/com/practica/genericas/Fecha.java:6:	OneDeclarationPerLine:	OneDeclarationPerLine: Use one line for each declaration, it enhances code readability.
src/main/java/com/practica/genericas/Fecha.java:8:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/genericas/Fecha.java:8:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/genericas/Fecha.java:8:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'nuevaFecha' is not assigned and could be declared final
src/main/java/com/practica/genericas/Fecha.java:8:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'nuevaFecha' is not assigned and could be declared final
src/main/java/com/practica/genericas/Fecha.java:19:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'dia' is not assigned and could be declared final
src/main/java/com/practica/genericas/Fecha.java:19:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'dia' is not assigned and could be declared final
src/main/java/com/practica/genericas/Fecha.java:23:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/genericas/Fecha.java:23:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/genericas/Fecha.java:27:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/genericas/Fecha.java:27:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/genericas/Fecha.java:27:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'mes' is not assigned and could be declared final
src/main/java/com/practica/genericas/Fecha.java:27:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'mes' is not assigned and could be declared final
src/main/java/com/practica/genericas/Fecha.java:31:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/genericas/Fecha.java:31:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/genericas/Fecha.java:35:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/genericas/Fecha.java:35:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/genericas/Fecha.java:35:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'anio' is not assigned and could be declared final
src/main/java/com/practica/genericas/Fecha.java:35:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'anio' is not assigned and could be declared final
src/main/java/com/practica/genericas/Fecha.java:41:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'cadena' could be declared final
src/main/java/com/practica/genericas/Fecha.java:41:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'cadena' could be declared final
src/main/java/com/practica/genericas/Fecha.java:42:	UnnecessaryLocalBeforeReturn:	UnnecessaryLocalBeforeReturn: Consider simply returning the value vs storing it in local variable 'cadena'
src/main/java/com/practica/genericas/Fecha.java:42:	UnnecessaryLocalBeforeReturn:	UnnecessaryLocalBeforeReturn: Consider simply returning the value vs storing it in local variable 'cadena'
src/main/java/com/practica/genericas/Fecha.java:45:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/genericas/Fecha.java:45:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/genericas/Fecha.java:45:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'a' is not assigned and could be declared final
src/main/java/com/practica/genericas/Fecha.java:45:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'a' is not assigned and could be declared final
src/main/java/com/practica/genericas/Fecha.java:45:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'b' is not assigned and could be declared final
src/main/java/com/practica/genericas/Fecha.java:45:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'b' is not assigned and could be declared final
src/main/java/com/practica/genericas/Fecha.java:45:	ShortVariable:	ShortVariable: Avoid variables with short names like a
src/main/java/com/practica/genericas/Fecha.java:45:	ShortVariable:	ShortVariable: Avoid variables with short names like a
src/main/java/com/practica/genericas/Fecha.java:45:	ShortVariable:	ShortVariable: Avoid variables with short names like b
src/main/java/com/practica/genericas/Fecha.java:45:	ShortVariable:	ShortVariable: Avoid variables with short names like b
src/main/java/com/practica/genericas/FechaHora.java:6:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/practica/genericas/FechaHora.java:6:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/practica/genericas/FechaHora.java:7:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the fecha field if you want a default access modifier
src/main/java/com/practica/genericas/FechaHora.java:7:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the fecha field if you want a default access modifier
src/main/java/com/practica/genericas/FechaHora.java:7:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/genericas/FechaHora.java:7:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/genericas/FechaHora.java:7:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/com/practica/genericas/FechaHora.java:7:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/com/practica/genericas/FechaHora.java:8:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the hora field if you want a default access modifier
src/main/java/com/practica/genericas/FechaHora.java:8:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the hora field if you want a default access modifier
src/main/java/com/practica/genericas/FechaHora.java:8:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/genericas/FechaHora.java:8:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/genericas/FechaHora.java:8:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/com/practica/genericas/FechaHora.java:8:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/com/practica/genericas/FechaHora.java:10:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/genericas/FechaHora.java:10:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/genericas/FechaHora.java:10:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'fecha' is not assigned and could be declared final
src/main/java/com/practica/genericas/FechaHora.java:10:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'fecha' is not assigned and could be declared final
src/main/java/com/practica/genericas/FechaHora.java:10:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'hora' is not assigned and could be declared final
src/main/java/com/practica/genericas/FechaHora.java:10:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'hora' is not assigned and could be declared final
src/main/java/com/practica/genericas/FechaHora.java:16:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/genericas/FechaHora.java:16:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/genericas/FechaHora.java:16:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'fecha' is not assigned and could be declared final
src/main/java/com/practica/genericas/FechaHora.java:16:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'fecha' is not assigned and could be declared final
src/main/java/com/practica/genericas/FechaHora.java:16:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'hora' is not assigned and could be declared final
src/main/java/com/practica/genericas/FechaHora.java:16:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'hora' is not assigned and could be declared final
src/main/java/com/practica/genericas/FechaHora.java:25:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'fecha' is not assigned and could be declared final
src/main/java/com/practica/genericas/FechaHora.java:25:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'fecha' is not assigned and could be declared final
src/main/java/com/practica/genericas/FechaHora.java:33:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'hora' is not assigned and could be declared final
src/main/java/com/practica/genericas/FechaHora.java:33:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'hora' is not assigned and could be declared final
src/main/java/com/practica/genericas/FechaHora.java:39:	AvoidFinalLocalVariable:	AvoidFinalLocalVariable: Avoid using final local variables, turn them into fields
src/main/java/com/practica/genericas/FechaHora.java:39:	AvoidFinalLocalVariable:	AvoidFinalLocalVariable: Avoid using final local variables, turn them into fields
src/main/java/com/practica/genericas/FechaHora.java:47:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'obj' is not assigned and could be declared final
src/main/java/com/practica/genericas/FechaHora.java:47:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'obj' is not assigned and could be declared final
src/main/java/com/practica/genericas/FechaHora.java:48:	UselessParentheses:	UselessParentheses: Useless parentheses.
src/main/java/com/practica/genericas/FechaHora.java:48:	UselessParentheses:	UselessParentheses: Useless parentheses.
src/main/java/com/practica/genericas/FechaHora.java:48:	UselessParentheses:	UselessParentheses: Useless parentheses.
src/main/java/com/practica/genericas/FechaHora.java:48:	UselessParentheses:	UselessParentheses: Useless parentheses.
src/main/java/com/practica/genericas/FechaHora.java:49:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'fecha' could be declared final
src/main/java/com/practica/genericas/FechaHora.java:49:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'fecha' could be declared final
src/main/java/com/practica/genericas/FechaHora.java:50:	OnlyOneReturn:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/main/java/com/practica/genericas/FechaHora.java:50:	OnlyOneReturn:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/main/java/com/practica/genericas/FechaHora.java:55:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'fecha' is not assigned and could be declared final
src/main/java/com/practica/genericas/FechaHora.java:55:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'fecha' is not assigned and could be declared final
src/main/java/com/practica/genericas/FechaHora.java:56:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/genericas/FechaHora.java:56:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/genericas/FechaHora.java:56:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/genericas/FechaHora.java:56:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/genericas/FechaHora.java:57:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/genericas/FechaHora.java:57:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/genericas/FechaHora.java:58:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/genericas/FechaHora.java:58:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/genericas/FechaHora.java:59:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/genericas/FechaHora.java:59:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/genericas/FechaHora.java:63:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'o' is not assigned and could be declared final
src/main/java/com/practica/genericas/FechaHora.java:63:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'o' is not assigned and could be declared final
src/main/java/com/practica/genericas/FechaHora.java:63:	ShortVariable:	ShortVariable: Avoid variables with short names like o
src/main/java/com/practica/genericas/FechaHora.java:63:	ShortVariable:	ShortVariable: Avoid variables with short names like o
src/main/java/com/practica/genericas/FechaHora.java:64:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'dateTime1' could be declared final
src/main/java/com/practica/genericas/FechaHora.java:64:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'dateTime1' could be declared final
src/main/java/com/practica/genericas/FechaHora.java:66:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/genericas/FechaHora.java:66:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/genericas/FechaHora.java:66:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/genericas/FechaHora.java:66:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/genericas/FechaHora.java:66:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/genericas/FechaHora.java:66:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/genericas/FechaHora.java:66:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'dateTime2' could be declared final
src/main/java/com/practica/genericas/FechaHora.java:66:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'dateTime2' could be declared final
src/main/java/com/practica/genericas/FechaHora.java:67:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/genericas/FechaHora.java:67:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/genericas/FechaHora.java:67:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/genericas/FechaHora.java:67:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/genericas/FechaHora.java:69:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/practica/genericas/FechaHora.java:69:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/practica/genericas/Hora.java:5:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/practica/genericas/Hora.java:5:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/practica/genericas/Hora.java:5:	ShortClassName:	ShortClassName: Avoid short class names like Hora
src/main/java/com/practica/genericas/Hora.java:5:	ShortClassName:	ShortClassName: Avoid short class names like Hora
src/main/java/com/practica/genericas/Hora.java:6:	AvoidFieldNameMatchingTypeName:	AvoidFieldNameMatchingTypeName: It is somewhat confusing to have a field name matching the declaring class name
src/main/java/com/practica/genericas/Hora.java:6:	AvoidFieldNameMatchingTypeName:	AvoidFieldNameMatchingTypeName: It is somewhat confusing to have a field name matching the declaring class name
src/main/java/com/practica/genericas/Hora.java:6:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/genericas/Hora.java:6:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/genericas/Hora.java:6:	OneDeclarationPerLine:	OneDeclarationPerLine: Use one line for each declaration, it enhances code readability.
src/main/java/com/practica/genericas/Hora.java:6:	OneDeclarationPerLine:	OneDeclarationPerLine: Use one line for each declaration, it enhances code readability.
src/main/java/com/practica/genericas/Hora.java:8:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/genericas/Hora.java:8:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/genericas/Hora.java:8:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'nuevaFecha' is not assigned and could be declared final
src/main/java/com/practica/genericas/Hora.java:8:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'nuevaFecha' is not assigned and could be declared final
src/main/java/com/practica/genericas/Hora.java:18:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'hora' is not assigned and could be declared final
src/main/java/com/practica/genericas/Hora.java:18:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'hora' is not assigned and could be declared final
src/main/java/com/practica/genericas/Hora.java:22:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/genericas/Hora.java:22:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/genericas/Hora.java:26:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/genericas/Hora.java:26:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/genericas/Hora.java:26:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'minuto' is not assigned and could be declared final
src/main/java/com/practica/genericas/Hora.java:26:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'minuto' is not assigned and could be declared final
src/main/java/com/practica/genericas/Hora.java:35:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/genericas/Hora.java:35:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/genericas/Hora.java:35:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'a' is not assigned and could be declared final
src/main/java/com/practica/genericas/Hora.java:35:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'a' is not assigned and could be declared final
src/main/java/com/practica/genericas/Hora.java:35:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'b' is not assigned and could be declared final
src/main/java/com/practica/genericas/Hora.java:35:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'b' is not assigned and could be declared final
src/main/java/com/practica/genericas/Hora.java:35:	ShortVariable:	ShortVariable: Avoid variables with short names like a
src/main/java/com/practica/genericas/Hora.java:35:	ShortVariable:	ShortVariable: Avoid variables with short names like a
src/main/java/com/practica/genericas/Hora.java:35:	ShortVariable:	ShortVariable: Avoid variables with short names like b
src/main/java/com/practica/genericas/Hora.java:35:	ShortVariable:	ShortVariable: Avoid variables with short names like b
src/main/java/com/practica/genericas/Persona.java:3:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/practica/genericas/Persona.java:3:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/practica/genericas/Persona.java:4:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/genericas/Persona.java:4:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/genericas/Persona.java:4:	OneDeclarationPerLine:	OneDeclarationPerLine: Use one line for each declaration, it enhances code readability.
src/main/java/com/practica/genericas/Persona.java:4:	OneDeclarationPerLine:	OneDeclarationPerLine: Use one line for each declaration, it enhances code readability.
src/main/java/com/practica/genericas/Persona.java:4:	ShortVariable:	ShortVariable: Avoid variables with short names like cp
src/main/java/com/practica/genericas/Persona.java:4:	ShortVariable:	ShortVariable: Avoid variables with short names like cp
src/main/java/com/practica/genericas/Persona.java:5:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the fechaNacimiento field if you want a default access modifier
src/main/java/com/practica/genericas/Persona.java:5:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the fechaNacimiento field if you want a default access modifier
src/main/java/com/practica/genericas/Persona.java:5:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/genericas/Persona.java:5:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/genericas/Persona.java:5:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/com/practica/genericas/Persona.java:5:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/com/practica/genericas/Persona.java:7:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/genericas/Persona.java:7:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/genericas/Persona.java:7:	UncommentedEmptyConstructor:	UncommentedEmptyConstructor: Document empty constructor
src/main/java/com/practica/genericas/Persona.java:7:	UncommentedEmptyConstructor:	UncommentedEmptyConstructor: Document empty constructor
src/main/java/com/practica/genericas/Persona.java:11:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/genericas/Persona.java:11:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/genericas/Persona.java:11:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'datos' is not assigned and could be declared final
src/main/java/com/practica/genericas/Persona.java:11:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'datos' is not assigned and could be declared final
src/main/java/com/practica/genericas/Persona.java:11:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'fecha' is not assigned and could be declared final
src/main/java/com/practica/genericas/Persona.java:11:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'fecha' is not assigned and could be declared final
src/main/java/com/practica/genericas/Persona.java:26:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'nombre' is not assigned and could be declared final
src/main/java/com/practica/genericas/Persona.java:26:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'nombre' is not assigned and could be declared final
src/main/java/com/practica/genericas/Persona.java:30:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/genericas/Persona.java:30:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/genericas/Persona.java:34:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/genericas/Persona.java:34:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/genericas/Persona.java:34:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'apellidos' is not assigned and could be declared final
src/main/java/com/practica/genericas/Persona.java:34:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'apellidos' is not assigned and could be declared final
src/main/java/com/practica/genericas/Persona.java:38:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/genericas/Persona.java:38:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/genericas/Persona.java:42:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/genericas/Persona.java:42:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/genericas/Persona.java:42:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'documento' is not assigned and could be declared final
src/main/java/com/practica/genericas/Persona.java:42:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'documento' is not assigned and could be declared final
src/main/java/com/practica/genericas/Persona.java:46:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/genericas/Persona.java:46:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/genericas/Persona.java:50:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/genericas/Persona.java:50:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/genericas/Persona.java:50:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'email' is not assigned and could be declared final
src/main/java/com/practica/genericas/Persona.java:50:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'email' is not assigned and could be declared final
src/main/java/com/practica/genericas/Persona.java:54:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/genericas/Persona.java:54:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/genericas/Persona.java:58:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/genericas/Persona.java:58:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/genericas/Persona.java:58:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'direccion' is not assigned and could be declared final
src/main/java/com/practica/genericas/Persona.java:58:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'direccion' is not assigned and could be declared final
src/main/java/com/practica/genericas/Persona.java:62:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/genericas/Persona.java:62:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/genericas/Persona.java:66:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/genericas/Persona.java:66:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/genericas/Persona.java:66:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'cp' is not assigned and could be declared final
src/main/java/com/practica/genericas/Persona.java:66:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'cp' is not assigned and could be declared final
src/main/java/com/practica/genericas/Persona.java:66:	ShortVariable:	ShortVariable: Avoid variables with short names like cp
src/main/java/com/practica/genericas/Persona.java:66:	ShortVariable:	ShortVariable: Avoid variables with short names like cp
src/main/java/com/practica/genericas/Persona.java:74:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'fechaNacimiento' is not assigned and could be declared final
src/main/java/com/practica/genericas/Persona.java:74:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'fechaNacimiento' is not assigned and could be declared final
src/main/java/com/practica/genericas/Persona.java:80:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'fecha' could be declared final
src/main/java/com/practica/genericas/Persona.java:80:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'fecha' could be declared final
src/main/java/com/practica/genericas/Persona.java:85:	UseStringBufferForStringAppends:	UseStringBufferForStringAppends: Prefer StringBuilder (non-synchronized) or StringBuffer (synchronized) over += for concatenating strings
src/main/java/com/practica/genericas/Persona.java:85:	UseStringBufferForStringAppends:	UseStringBufferForStringAppends: Prefer StringBuilder (non-synchronized) or StringBuffer (synchronized) over += for concatenating strings
src/main/java/com/practica/genericas/Persona.java:87:	UseStringBufferForStringAppends:	UseStringBufferForStringAppends: Prefer StringBuilder (non-synchronized) or StringBuffer (synchronized) over += for concatenating strings
src/main/java/com/practica/genericas/Persona.java:87:	UseStringBufferForStringAppends:	UseStringBufferForStringAppends: Prefer StringBuilder (non-synchronized) or StringBuffer (synchronized) over += for concatenating strings
src/main/java/com/practica/genericas/Persona.java:89:	UseStringBufferForStringAppends:	UseStringBufferForStringAppends: Prefer StringBuilder (non-synchronized) or StringBuffer (synchronized) over += for concatenating strings
src/main/java/com/practica/genericas/Persona.java:89:	UseStringBufferForStringAppends:	UseStringBufferForStringAppends: Prefer StringBuilder (non-synchronized) or StringBuffer (synchronized) over += for concatenating strings
src/main/java/com/practica/genericas/Persona.java:91:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/genericas/Persona.java:91:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/genericas/Persona.java:91:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/practica/genericas/Persona.java:91:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/practica/genericas/Persona.java:91:	UseStringBufferForStringAppends:	UseStringBufferForStringAppends: Prefer StringBuilder (non-synchronized) or StringBuffer (synchronized) over += for concatenating strings
src/main/java/com/practica/genericas/Persona.java:91:	UseStringBufferForStringAppends:	UseStringBufferForStringAppends: Prefer StringBuilder (non-synchronized) or StringBuffer (synchronized) over += for concatenating strings
src/main/java/com/practica/genericas/PosicionPersona.java:3:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/practica/genericas/PosicionPersona.java:3:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/practica/genericas/PosicionPersona.java:3:	DataClass:	DataClass: The class 'PosicionPersona' is suspected to be a Data Class (WOC=12.500%, NOPA=0, NOAM=6, WMC=8)
src/main/java/com/practica/genericas/PosicionPersona.java:3:	DataClass:	DataClass: The class 'PosicionPersona' is suspected to be a Data Class (WOC=12.500%, NOPA=0, NOAM=6, WMC=8)
src/main/java/com/practica/genericas/PosicionPersona.java:5:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/genericas/PosicionPersona.java:5:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/genericas/PosicionPersona.java:6:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/genericas/PosicionPersona.java:6:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/genericas/PosicionPersona.java:7:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/genericas/PosicionPersona.java:7:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/genericas/PosicionPersona.java:9:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/genericas/PosicionPersona.java:9:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/genericas/PosicionPersona.java:9:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'data' is not assigned and could be declared final
src/main/java/com/practica/genericas/PosicionPersona.java:9:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'data' is not assigned and could be declared final
src/main/java/com/practica/genericas/PosicionPersona.java:9:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'fecha' is not assigned and could be declared final
src/main/java/com/practica/genericas/PosicionPersona.java:9:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'fecha' is not assigned and could be declared final
src/main/java/com/practica/genericas/PosicionPersona.java:10:	UselessParentheses:	UselessParentheses: Useless parentheses.
src/main/java/com/practica/genericas/PosicionPersona.java:10:	UselessParentheses:	UselessParentheses: Useless parentheses.
src/main/java/com/practica/genericas/PosicionPersona.java:18:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'coordenada' is not assigned and could be declared final
src/main/java/com/practica/genericas/PosicionPersona.java:18:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'coordenada' is not assigned and could be declared final
src/main/java/com/practica/genericas/PosicionPersona.java:24:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'documento' is not assigned and could be declared final
src/main/java/com/practica/genericas/PosicionPersona.java:24:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'documento' is not assigned and could be declared final
src/main/java/com/practica/genericas/PosicionPersona.java:30:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'fechaPosicion' is not assigned and could be declared final
src/main/java/com/practica/genericas/PosicionPersona.java:30:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'fechaPosicion' is not assigned and could be declared final
src/main/java/com/practica/genericas/PosicionPersona.java:38:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/genericas/PosicionPersona.java:38:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/genericas/PosicionPersona.java:38:	UseStringBufferForStringAppends:	UseStringBufferForStringAppends: Prefer StringBuilder (non-synchronized) or StringBuffer (synchronized) over += for concatenating strings
src/main/java/com/practica/genericas/PosicionPersona.java:38:	UseStringBufferForStringAppends:	UseStringBufferForStringAppends: Prefer StringBuilder (non-synchronized) or StringBuffer (synchronized) over += for concatenating strings
src/main/java/com/practica/genericas/PosicionPersona.java:39:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/genericas/PosicionPersona.java:39:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/genericas/PosicionPersona.java:39:	UseStringBufferForStringAppends:	UseStringBufferForStringAppends: Prefer StringBuilder (non-synchronized) or StringBuffer (synchronized) over += for concatenating strings
src/main/java/com/practica/genericas/PosicionPersona.java:39:	UseStringBufferForStringAppends:	UseStringBufferForStringAppends: Prefer StringBuilder (non-synchronized) or StringBuffer (synchronized) over += for concatenating strings
src/main/java/com/practica/lista/ListaContactos.java:8:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/com/practica/lista/ListaContactos.java:8:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/com/practica/lista/ListaContactos.java:8:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/practica/lista/ListaContactos.java:8:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/practica/lista/ListaContactos.java:8:	TooManyMethods:	TooManyMethods: This class has too many methods, consider refactoring it.
src/main/java/com/practica/lista/ListaContactos.java:8:	TooManyMethods:	TooManyMethods: This class has too many methods, consider refactoring it.
src/main/java/com/practica/lista/ListaContactos.java:9:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/practica/lista/ListaContactos.java:9:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/practica/lista/ListaContactos.java:9:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/lista/ListaContactos.java:9:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/lista/ListaContactos.java:10:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/practica/lista/ListaContactos.java:10:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/practica/lista/ListaContactos.java:10:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/lista/ListaContactos.java:10:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/lista/ListaContactos.java:11:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/practica/lista/ListaContactos.java:11:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/practica/lista/ListaContactos.java:11:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/lista/ListaContactos.java:11:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/lista/ListaContactos.java:12:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/practica/lista/ListaContactos.java:12:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/com/practica/lista/ListaContactos.java:12:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/lista/ListaContactos.java:12:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/lista/ListaContactos.java:15:	CommentSize:	CommentSize: Comment is too large: Line too long
src/main/java/com/practica/lista/ListaContactos.java:15:	CommentSize:	CommentSize: Comment is too large: Line too long
src/main/java/com/practica/lista/ListaContactos.java:16:	CommentSize:	CommentSize: Comment is too large: Line too long
src/main/java/com/practica/lista/ListaContactos.java:16:	CommentSize:	CommentSize: Comment is too large: Line too long
src/main/java/com/practica/lista/ListaContactos.java:19:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'p' is not assigned and could be declared final
src/main/java/com/practica/lista/ListaContactos.java:19:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'p' is not assigned and could be declared final
src/main/java/com/practica/lista/ListaContactos.java:19:	ShortVariable:	ShortVariable: Avoid variables with short names like p
src/main/java/com/practica/lista/ListaContactos.java:19:	ShortVariable:	ShortVariable: Avoid variables with short names like p
src/main/java/com/practica/lista/ListaContactos.java:21:	NullAssignment:	NullAssignment: Assigning an Object to null is a code smell.  Consider refactoring.
src/main/java/com/practica/lista/ListaContactos.java:21:	NullAssignment:	NullAssignment: Assigning an Object to null is a code smell.  Consider refactoring.
src/main/java/com/practica/lista/ListaContactos.java:22:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'encontrado' (lines '22'-'25').
src/main/java/com/practica/lista/ListaContactos.java:22:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'encontrado' (lines '22'-'25').
src/main/java/com/practica/lista/ListaContactos.java:22:	OneDeclarationPerLine:	OneDeclarationPerLine: Use one line for each declaration, it enhances code readability.
src/main/java/com/practica/lista/ListaContactos.java:22:	OneDeclarationPerLine:	OneDeclarationPerLine: Use one line for each declaration, it enhances code readability.
src/main/java/com/practica/lista/ListaContactos.java:24:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/lista/ListaContactos.java:24:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/lista/ListaContactos.java:25:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/main/java/com/practica/lista/ListaContactos.java:25:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/main/java/com/practica/lista/ListaContactos.java:25:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'encontrado' (lines '25'-'25').
src/main/java/com/practica/lista/ListaContactos.java:25:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'encontrado' (lines '25'-'25').
src/main/java/com/practica/lista/ListaContactos.java:25:	IfElseStmtsMustUseBraces:	IfElseStmtsMustUseBraces: Avoid using if...else statements without curly braces
src/main/java/com/practica/lista/ListaContactos.java:25:	IfElseStmtsMustUseBraces:	IfElseStmtsMustUseBraces: Avoid using if...else statements without curly braces
src/main/java/com/practica/lista/ListaContactos.java:26:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/lista/ListaContactos.java:26:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/lista/ListaContactos.java:29:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/main/java/com/practica/lista/ListaContactos.java:29:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/main/java/com/practica/lista/ListaContactos.java:29:	IfElseStmtsMustUseBraces:	IfElseStmtsMustUseBraces: Avoid using if...else statements without curly braces
src/main/java/com/practica/lista/ListaContactos.java:29:	IfElseStmtsMustUseBraces:	IfElseStmtsMustUseBraces: Avoid using if...else statements without curly braces
src/main/java/com/practica/lista/ListaContactos.java:31:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/main/java/com/practica/lista/ListaContactos.java:31:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/main/java/com/practica/lista/ListaContactos.java:31:	IfStmtsMustUseBraces:	IfStmtsMustUseBraces: Avoid using if statements without curly braces
src/main/java/com/practica/lista/ListaContactos.java:31:	IfStmtsMustUseBraces:	IfStmtsMustUseBraces: Avoid using if statements without curly braces
src/main/java/com/practica/lista/ListaContactos.java:34:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'aux' is not assigned and could be declared final
src/main/java/com/practica/lista/ListaContactos.java:34:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'aux' is not assigned and could be declared final
src/main/java/com/practica/lista/ListaContactos.java:34:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'p' is not assigned and could be declared final
src/main/java/com/practica/lista/ListaContactos.java:34:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'p' is not assigned and could be declared final
src/main/java/com/practica/lista/ListaContactos.java:34:	ShortVariable:	ShortVariable: Avoid variables with short names like p
src/main/java/com/practica/lista/ListaContactos.java:34:	ShortVariable:	ShortVariable: Avoid variables with short names like p
src/main/java/com/practica/lista/ListaContactos.java:35:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'npActual' could be declared final
src/main/java/com/practica/lista/ListaContactos.java:35:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'npActual' could be declared final
src/main/java/com/practica/lista/ListaContactos.java:36:	NullAssignment:	NullAssignment: Assigning an Object to null is a code smell.  Consider refactoring.
src/main/java/com/practica/lista/ListaContactos.java:36:	NullAssignment:	NullAssignment: Assigning an Object to null is a code smell.  Consider refactoring.
src/main/java/com/practica/lista/ListaContactos.java:38:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'm' could be declared final
src/main/java/com/practica/lista/ListaContactos.java:38:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'm' could be declared final
src/main/java/com/practica/lista/ListaContactos.java:38:	ShortVariable:	ShortVariable: Avoid variables with short names like m
src/main/java/com/practica/lista/ListaContactos.java:38:	ShortVariable:	ShortVariable: Avoid variables with short names like m
src/main/java/com/practica/lista/ListaContactos.java:39:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'npNuevo' could be declared final
src/main/java/com/practica/lista/ListaContactos.java:39:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'npNuevo' could be declared final
src/main/java/com/practica/lista/ListaContactos.java:41:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/main/java/com/practica/lista/ListaContactos.java:41:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/main/java/com/practica/lista/ListaContactos.java:41:	IfElseStmtsMustUseBraces:	IfElseStmtsMustUseBraces: Avoid using if...else statements without curly braces
src/main/java/com/practica/lista/ListaContactos.java:41:	IfElseStmtsMustUseBraces:	IfElseStmtsMustUseBraces: Avoid using if...else statements without curly braces
src/main/java/com/practica/lista/ListaContactos.java:43:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/main/java/com/practica/lista/ListaContactos.java:43:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/main/java/com/practica/lista/ListaContactos.java:43:	IfElseStmtsMustUseBraces:	IfElseStmtsMustUseBraces: Avoid using if...else statements without curly braces
src/main/java/com/practica/lista/ListaContactos.java:43:	IfElseStmtsMustUseBraces:	IfElseStmtsMustUseBraces: Avoid using if...else statements without curly braces
src/main/java/com/practica/lista/ListaContactos.java:48:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'p' is not assigned and could be declared final
src/main/java/com/practica/lista/ListaContactos.java:48:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'p' is not assigned and could be declared final
src/main/java/com/practica/lista/ListaContactos.java:48:	ShortVariable:	ShortVariable: Avoid variables with short names like p
src/main/java/com/practica/lista/ListaContactos.java:48:	ShortVariable:	ShortVariable: Avoid variables with short names like p
src/main/java/com/practica/lista/ListaContactos.java:51:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/lista/ListaContactos.java:51:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/lista/ListaContactos.java:56:	AvoidReassigningParameters:	AvoidReassigningParameters: Avoid reassigning parameters such as 'npActual'
src/main/java/com/practica/lista/ListaContactos.java:56:	AvoidReassigningParameters:	AvoidReassigningParameters: Avoid reassigning parameters such as 'npActual'
src/main/java/com/practica/lista/ListaContactos.java:62:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/lista/ListaContactos.java:62:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/lista/ListaContactos.java:62:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'aux' is not assigned and could be declared final
src/main/java/com/practica/lista/ListaContactos.java:62:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'aux' is not assigned and could be declared final
src/main/java/com/practica/lista/ListaContactos.java:62:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'p' is not assigned and could be declared final
src/main/java/com/practica/lista/ListaContactos.java:62:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'p' is not assigned and could be declared final
src/main/java/com/practica/lista/ListaContactos.java:62:	ShortVariable:	ShortVariable: Avoid variables with short names like p
src/main/java/com/practica/lista/ListaContactos.java:62:	ShortVariable:	ShortVariable: Avoid variables with short names like p
src/main/java/com/practica/lista/ListaContactos.java:63:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'nuevo' could be declared final
src/main/java/com/practica/lista/ListaContactos.java:63:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'nuevo' could be declared final
src/main/java/com/practica/lista/ListaContactos.java:76:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/lista/ListaContactos.java:76:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/lista/ListaContactos.java:79:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/main/java/com/practica/lista/ListaContactos.java:79:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/main/java/com/practica/lista/ListaContactos.java:79:	IfElseStmtsMustUseBraces:	IfElseStmtsMustUseBraces: Avoid using if...else statements without curly braces
src/main/java/com/practica/lista/ListaContactos.java:79:	IfElseStmtsMustUseBraces:	IfElseStmtsMustUseBraces: Avoid using if...else statements without curly braces
src/main/java/com/practica/lista/ListaContactos.java:79:	OnlyOneReturn:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/main/java/com/practica/lista/ListaContactos.java:79:	OnlyOneReturn:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/main/java/com/practica/lista/ListaContactos.java:90:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/lista/ListaContactos.java:90:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/lista/ListaContactos.java:94:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/lista/ListaContactos.java:94:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/lista/ListaContactos.java:95:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'aux' could be declared final
src/main/java/com/practica/lista/ListaContactos.java:95:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'aux' could be declared final
src/main/java/com/practica/lista/ListaContactos.java:96:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/lista/ListaContactos.java:96:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/lista/ListaContactos.java:96:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/lista/ListaContactos.java:96:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/lista/ListaContactos.java:96:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/practica/lista/ListaContactos.java:96:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/practica/lista/ListaContactos.java:97:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/lista/ListaContactos.java:97:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/lista/ListaContactos.java:97:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/lista/ListaContactos.java:97:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/lista/ListaContactos.java:97:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/practica/lista/ListaContactos.java:97:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/practica/lista/ListaContactos.java:106:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'fin' is not assigned and could be declared final
src/main/java/com/practica/lista/ListaContactos.java:106:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'fin' is not assigned and could be declared final
src/main/java/com/practica/lista/ListaContactos.java:106:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'inicio' is not assigned and could be declared final
src/main/java/com/practica/lista/ListaContactos.java:106:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'inicio' is not assigned and could be declared final
src/main/java/com/practica/lista/ListaContactos.java:112:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/lista/ListaContactos.java:112:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/lista/ListaContactos.java:112:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'fin' is not assigned and could be declared final
src/main/java/com/practica/lista/ListaContactos.java:112:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'fin' is not assigned and could be declared final
src/main/java/com/practica/lista/ListaContactos.java:112:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'inicio' is not assigned and could be declared final
src/main/java/com/practica/lista/ListaContactos.java:112:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'inicio' is not assigned and could be declared final
src/main/java/com/practica/lista/ListaContactos.java:116:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'intervalo' is not assigned and could be declared final
src/main/java/com/practica/lista/ListaContactos.java:116:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'intervalo' is not assigned and could be declared final
src/main/java/com/practica/lista/ListaContactos.java:116:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'persona' is not assigned and could be declared final
src/main/java/com/practica/lista/ListaContactos.java:116:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'persona' is not assigned and could be declared final
src/main/java/com/practica/lista/ListaContactos.java:118:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'fin' (lines '118'-'130').
src/main/java/com/practica/lista/ListaContactos.java:118:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'fin' (lines '118'-'130').
src/main/java/com/practica/lista/ListaContactos.java:118:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'inicio' (lines '118'-'130').
src/main/java/com/practica/lista/ListaContactos.java:118:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'inicio' (lines '118'-'130').
src/main/java/com/practica/lista/ListaContactos.java:118:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'fin' could be declared final
src/main/java/com/practica/lista/ListaContactos.java:118:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'fin' could be declared final
src/main/java/com/practica/lista/ListaContactos.java:118:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'inicio' could be declared final
src/main/java/com/practica/lista/ListaContactos.java:118:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'inicio' could be declared final
src/main/java/com/practica/lista/ListaContactos.java:118:	OneDeclarationPerLine:	OneDeclarationPerLine: Use one line for each declaration, it enhances code readability.
src/main/java/com/practica/lista/ListaContactos.java:118:	OneDeclarationPerLine:	OneDeclarationPerLine: Use one line for each declaration, it enhances code readability.
src/main/java/com/practica/lista/ListaContactos.java:122:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/lista/ListaContactos.java:122:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/lista/ListaContactos.java:122:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/lista/ListaContactos.java:122:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/lista/ListaContactos.java:122:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/practica/lista/ListaContactos.java:122:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/practica/lista/ListaContactos.java:122:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/practica/lista/ListaContactos.java:122:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/practica/lista/ListaContactos.java:123:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/practica/lista/ListaContactos.java:123:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/practica/lista/ListaContactos.java:123:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'nodo' could be declared final
src/main/java/com/practica/lista/ListaContactos.java:123:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'nodo' could be declared final
src/main/java/com/practica/lista/ListaContactos.java:126:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/practica/lista/ListaContactos.java:126:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/practica/lista/ListaContactos.java:132:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'persona' is not assigned and could be declared final
src/main/java/com/practica/lista/ListaContactos.java:132:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'persona' is not assigned and could be declared final
src/main/java/com/practica/lista/ListaContactos.java:136:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/main/java/com/practica/lista/ListaContactos.java:136:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/main/java/com/practica/lista/ListaContactos.java:136:	IfElseStmtsMustUseBraces:	IfElseStmtsMustUseBraces: Avoid using if...else statements without curly braces
src/main/java/com/practica/lista/ListaContactos.java:136:	IfElseStmtsMustUseBraces:	IfElseStmtsMustUseBraces: Avoid using if...else statements without curly braces
src/main/java/com/practica/lista/ListaContactos.java:138:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/main/java/com/practica/lista/ListaContactos.java:138:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/main/java/com/practica/lista/ListaContactos.java:138:	IfElseStmtsMustUseBraces:	IfElseStmtsMustUseBraces: Avoid using if...else statements without curly braces
src/main/java/com/practica/lista/ListaContactos.java:138:	IfElseStmtsMustUseBraces:	IfElseStmtsMustUseBraces: Avoid using if...else statements without curly braces
src/main/java/com/practica/lista/ListaContactos.java:139:	AvoidReassigningParameters:	AvoidReassigningParameters: Avoid reassigning parameters such as 'nodo'
src/main/java/com/practica/lista/ListaContactos.java:139:	AvoidReassigningParameters:	AvoidReassigningParameters: Avoid reassigning parameters such as 'nodo'
src/main/java/com/practica/lista/ListaContactos.java:148:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'cont' (lines '148'-'150').
src/main/java/com/practica/lista/ListaContactos.java:148:	DataflowAnomalyAnalysis:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'cont' (lines '148'-'150').
src/main/java/com/practica/lista/ListaContactos.java:148:	UnusedAssignment:	UnusedAssignment: The value assigned to variable 'cont' is never used (overwritten on line 150)
src/main/java/com/practica/lista/ListaContactos.java:148:	UnusedAssignment:	UnusedAssignment: The value assigned to variable 'cont' is never used (overwritten on line 150)
src/main/java/com/practica/lista/ListaContactos.java:151:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/lista/ListaContactos.java:151:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/lista/ListaContactos.java:151:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/lista/ListaContactos.java:151:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/lista/ListaContactos.java:151:	UseStringBufferForStringAppends:	UseStringBufferForStringAppends: Prefer StringBuilder (non-synchronized) or StringBuffer (synchronized) over += for concatenating strings
src/main/java/com/practica/lista/ListaContactos.java:151:	UseStringBufferForStringAppends:	UseStringBufferForStringAppends: Prefer StringBuilder (non-synchronized) or StringBuffer (synchronized) over += for concatenating strings
src/main/java/com/practica/lista/ListaContactos.java:152:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/lista/ListaContactos.java:152:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/lista/ListaContactos.java:152:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/lista/ListaContactos.java:152:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/lista/ListaContactos.java:152:	UseStringBufferForStringAppends:	UseStringBufferForStringAppends: Prefer StringBuilder (non-synchronized) or StringBuffer (synchronized) over += for concatenating strings
src/main/java/com/practica/lista/ListaContactos.java:152:	UseStringBufferForStringAppends:	UseStringBufferForStringAppends: Prefer StringBuilder (non-synchronized) or StringBuffer (synchronized) over += for concatenating strings
src/main/java/com/practica/lista/ListaContactos.java:155:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/lista/ListaContactos.java:155:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/lista/ListaContactos.java:155:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/lista/ListaContactos.java:155:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/lista/ListaContactos.java:155:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/practica/lista/ListaContactos.java:155:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/practica/lista/ListaContactos.java:156:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/lista/ListaContactos.java:156:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/lista/ListaContactos.java:156:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/lista/ListaContactos.java:156:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main/java/com/practica/lista/ListaContactos.java:156:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/practica/lista/ListaContactos.java:156:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main/java/com/practica/lista/ListaContactos.java:156:	UseStringBufferForStringAppends:	UseStringBufferForStringAppends: Prefer StringBuilder (non-synchronized) or StringBuffer (synchronized) over += for concatenating strings
src/main/java/com/practica/lista/ListaContactos.java:156:	UseStringBufferForStringAppends:	UseStringBufferForStringAppends: Prefer StringBuilder (non-synchronized) or StringBuffer (synchronized) over += for concatenating strings
src/main/java/com/practica/lista/NodoPosicion.java:13:	DataClass:	DataClass: The class 'NodoPosicion' is suspected to be a Data Class (WOC=0.000%, NOPA=0, NOAM=6, WMC=8)
src/main/java/com/practica/lista/NodoPosicion.java:13:	DataClass:	DataClass: The class 'NodoPosicion' is suspected to be a Data Class (WOC=0.000%, NOPA=0, NOAM=6, WMC=8)
src/main/java/com/practica/lista/NodoPosicion.java:14:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/lista/NodoPosicion.java:14:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/lista/NodoPosicion.java:15:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/lista/NodoPosicion.java:15:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/lista/NodoPosicion.java:16:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/lista/NodoPosicion.java:16:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/lista/NodoPosicion.java:19:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/lista/NodoPosicion.java:19:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/lista/NodoPosicion.java:21:	NullAssignment:	NullAssignment: Assigning an Object to null is a code smell.  Consider refactoring.
src/main/java/com/practica/lista/NodoPosicion.java:21:	NullAssignment:	NullAssignment: Assigning an Object to null is a code smell.  Consider refactoring.
src/main/java/com/practica/lista/NodoPosicion.java:24:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/lista/NodoPosicion.java:24:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/lista/NodoPosicion.java:24:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'nuevoNodo' is not assigned and could be declared final
src/main/java/com/practica/lista/NodoPosicion.java:24:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'nuevoNodo' is not assigned and could be declared final
src/main/java/com/practica/lista/NodoPosicion.java:35:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'coordenada' is not assigned and could be declared final
src/main/java/com/practica/lista/NodoPosicion.java:35:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'coordenada' is not assigned and could be declared final
src/main/java/com/practica/lista/NodoPosicion.java:43:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'numPersonas' is not assigned and could be declared final
src/main/java/com/practica/lista/NodoPosicion.java:43:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'numPersonas' is not assigned and could be declared final
src/main/java/com/practica/lista/NodoPosicion.java:51:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'siguiente' is not assigned and could be declared final
src/main/java/com/practica/lista/NodoPosicion.java:51:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'siguiente' is not assigned and could be declared final
src/main/java/com/practica/lista/NodoTemporal.java:7:	CommentSize:	CommentSize: Comment is too large: Line too long
src/main/java/com/practica/lista/NodoTemporal.java:7:	CommentSize:	CommentSize: Comment is too large: Line too long
src/main/java/com/practica/lista/NodoTemporal.java:8:	CommentSize:	CommentSize: Comment is too large: Line too long
src/main/java/com/practica/lista/NodoTemporal.java:8:	CommentSize:	CommentSize: Comment is too large: Line too long
src/main/java/com/practica/lista/NodoTemporal.java:11:	DataClass:	DataClass: The class 'NodoTemporal' is suspected to be a Data Class (WOC=0.000%, NOPA=0, NOAM=6, WMC=8)
src/main/java/com/practica/lista/NodoTemporal.java:11:	DataClass:	DataClass: The class 'NodoTemporal' is suspected to be a Data Class (WOC=0.000%, NOPA=0, NOAM=6, WMC=8)
src/main/java/com/practica/lista/NodoTemporal.java:12:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/lista/NodoTemporal.java:12:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/lista/NodoTemporal.java:13:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/lista/NodoTemporal.java:13:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/lista/NodoTemporal.java:14:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/lista/NodoTemporal.java:14:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/com/practica/lista/NodoTemporal.java:17:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/lista/NodoTemporal.java:17:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/lista/NodoTemporal.java:19:	NullAssignment:	NullAssignment: Assigning an Object to null is a code smell.  Consider refactoring.
src/main/java/com/practica/lista/NodoTemporal.java:19:	NullAssignment:	NullAssignment: Assigning an Object to null is a code smell.  Consider refactoring.
src/main/java/com/practica/lista/NodoTemporal.java:20:	NullAssignment:	NullAssignment: Assigning an Object to null is a code smell.  Consider refactoring.
src/main/java/com/practica/lista/NodoTemporal.java:20:	NullAssignment:	NullAssignment: Assigning an Object to null is a code smell.  Consider refactoring.
src/main/java/com/practica/lista/NodoTemporal.java:23:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/lista/NodoTemporal.java:23:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/lista/NodoTemporal.java:23:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'fecha' is not assigned and could be declared final
src/main/java/com/practica/lista/NodoTemporal.java:23:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'fecha' is not assigned and could be declared final
src/main/java/com/practica/lista/NodoTemporal.java:25:	NullAssignment:	NullAssignment: Assigning an Object to null is a code smell.  Consider refactoring.
src/main/java/com/practica/lista/NodoTemporal.java:25:	NullAssignment:	NullAssignment: Assigning an Object to null is a code smell.  Consider refactoring.
src/main/java/com/practica/lista/NodoTemporal.java:26:	NullAssignment:	NullAssignment: Assigning an Object to null is a code smell.  Consider refactoring.
src/main/java/com/practica/lista/NodoTemporal.java:26:	NullAssignment:	NullAssignment: Assigning an Object to null is a code smell.  Consider refactoring.
src/main/java/com/practica/lista/NodoTemporal.java:33:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'listaCoordenadas' is not assigned and could be declared final
src/main/java/com/practica/lista/NodoTemporal.java:33:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'listaCoordenadas' is not assigned and could be declared final
src/main/java/com/practica/lista/NodoTemporal.java:39:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'fecha' is not assigned and could be declared final
src/main/java/com/practica/lista/NodoTemporal.java:39:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'fecha' is not assigned and could be declared final
src/main/java/com/practica/lista/NodoTemporal.java:45:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'siguiente' is not assigned and could be declared final
src/main/java/com/practica/lista/NodoTemporal.java:45:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'siguiente' is not assigned and could be declared final
src/main/java/com/practica/utilidades/Utilidades.java:10:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/practica/utilidades/Utilidades.java:10:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/com/practica/utilidades/Utilidades.java:10:	UseUtilityClass:	UseUtilityClass: All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
src/main/java/com/practica/utilidades/Utilidades.java:10:	UseUtilityClass:	UseUtilityClass: All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
src/main/java/com/practica/utilidades/Utilidades.java:11:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/utilidades/Utilidades.java:11:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/utilidades/Utilidades.java:11:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'anio' is not assigned and could be declared final
src/main/java/com/practica/utilidades/Utilidades.java:11:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'anio' is not assigned and could be declared final
src/main/java/com/practica/utilidades/Utilidades.java:11:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'dia' is not assigned and could be declared final
src/main/java/com/practica/utilidades/Utilidades.java:11:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'dia' is not assigned and could be declared final
src/main/java/com/practica/utilidades/Utilidades.java:11:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'mes' is not assigned and could be declared final
src/main/java/com/practica/utilidades/Utilidades.java:11:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'mes' is not assigned and could be declared final
src/main/java/com/practica/utilidades/Utilidades.java:12:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'mapFecha' could be declared final
src/main/java/com/practica/utilidades/Utilidades.java:12:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'mapFecha' could be declared final
src/main/java/com/practica/utilidades/Utilidades.java:12:	UseConcurrentHashMap:	UseConcurrentHashMap: If you run in Java5 or newer and have concurrent access, you should use the ConcurrentHashMap implementation
src/main/java/com/practica/utilidades/Utilidades.java:12:	UseConcurrentHashMap:	UseConcurrentHashMap: If you run in Java5 or newer and have concurrent access, you should use the ConcurrentHashMap implementation
src/main/java/com/practica/utilidades/Utilidades.java:12:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/main/java/com/practica/utilidades/Utilidades.java:12:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/main/java/com/practica/utilidades/Utilidades.java:19:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/utilidades/Utilidades.java:19:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/utilidades/Utilidades.java:19:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'hora' is not assigned and could be declared final
src/main/java/com/practica/utilidades/Utilidades.java:19:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'hora' is not assigned and could be declared final
src/main/java/com/practica/utilidades/Utilidades.java:19:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'minuto' is not assigned and could be declared final
src/main/java/com/practica/utilidades/Utilidades.java:19:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'minuto' is not assigned and could be declared final
src/main/java/com/practica/utilidades/Utilidades.java:20:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'mapHora' could be declared final
src/main/java/com/practica/utilidades/Utilidades.java:20:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'mapHora' could be declared final
src/main/java/com/practica/utilidades/Utilidades.java:20:	UseConcurrentHashMap:	UseConcurrentHashMap: If you run in Java5 or newer and have concurrent access, you should use the ConcurrentHashMap implementation
src/main/java/com/practica/utilidades/Utilidades.java:20:	UseConcurrentHashMap:	UseConcurrentHashMap: If you run in Java5 or newer and have concurrent access, you should use the ConcurrentHashMap implementation
src/main/java/com/practica/utilidades/Utilidades.java:20:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/main/java/com/practica/utilidades/Utilidades.java:20:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/main/java/com/practica/utilidades/Utilidades.java:26:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/utilidades/Utilidades.java:26:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/utilidades/Utilidades.java:26:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'fecha' is not assigned and could be declared final
src/main/java/com/practica/utilidades/Utilidades.java:26:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'fecha' is not assigned and could be declared final
src/main/java/com/practica/utilidades/Utilidades.java:26:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'hora' is not assigned and could be declared final
src/main/java/com/practica/utilidades/Utilidades.java:26:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'hora' is not assigned and could be declared final
src/main/java/com/practica/utilidades/Utilidades.java:27:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'mapHora' could be declared final
src/main/java/com/practica/utilidades/Utilidades.java:27:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'mapHora' could be declared final
src/main/java/com/practica/utilidades/Utilidades.java:27:	UseConcurrentHashMap:	UseConcurrentHashMap: If you run in Java5 or newer and have concurrent access, you should use the ConcurrentHashMap implementation
src/main/java/com/practica/utilidades/Utilidades.java:27:	UseConcurrentHashMap:	UseConcurrentHashMap: If you run in Java5 or newer and have concurrent access, you should use the ConcurrentHashMap implementation
src/main/java/com/practica/utilidades/Utilidades.java:27:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/main/java/com/practica/utilidades/Utilidades.java:27:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/main/java/com/practica/utilidades/Utilidades.java:33:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/utilidades/Utilidades.java:33:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/utilidades/Utilidades.java:33:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'fin' is not assigned and could be declared final
src/main/java/com/practica/utilidades/Utilidades.java:33:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'fin' is not assigned and could be declared final
src/main/java/com/practica/utilidades/Utilidades.java:33:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'inicio' is not assigned and could be declared final
src/main/java/com/practica/utilidades/Utilidades.java:33:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'inicio' is not assigned and could be declared final
src/main/java/com/practica/utilidades/Utilidades.java:34:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'mapIntervalo' could be declared final
src/main/java/com/practica/utilidades/Utilidades.java:34:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'mapIntervalo' could be declared final
src/main/java/com/practica/utilidades/Utilidades.java:34:	UseConcurrentHashMap:	UseConcurrentHashMap: If you run in Java5 or newer and have concurrent access, you should use the ConcurrentHashMap implementation
src/main/java/com/practica/utilidades/Utilidades.java:34:	UseConcurrentHashMap:	UseConcurrentHashMap: If you run in Java5 or newer and have concurrent access, you should use the ConcurrentHashMap implementation
src/main/java/com/practica/utilidades/Utilidades.java:34:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/main/java/com/practica/utilidades/Utilidades.java:34:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/main/java/com/practica/utilidades/Utilidades.java:40:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/utilidades/Utilidades.java:40:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/utilidades/Utilidades.java:40:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'coordenada' is not assigned and could be declared final
src/main/java/com/practica/utilidades/Utilidades.java:40:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'coordenada' is not assigned and could be declared final
src/main/java/com/practica/utilidades/Utilidades.java:40:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'numPersonas' is not assigned and could be declared final
src/main/java/com/practica/utilidades/Utilidades.java:40:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'numPersonas' is not assigned and could be declared final
src/main/java/com/practica/utilidades/Utilidades.java:40:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'siguiente' is not assigned and could be declared final
src/main/java/com/practica/utilidades/Utilidades.java:40:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'siguiente' is not assigned and could be declared final
src/main/java/com/practica/utilidades/Utilidades.java:41:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'mapNodosPosicion' could be declared final
src/main/java/com/practica/utilidades/Utilidades.java:41:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'mapNodosPosicion' could be declared final
src/main/java/com/practica/utilidades/Utilidades.java:41:	UseConcurrentHashMap:	UseConcurrentHashMap: If you run in Java5 or newer and have concurrent access, you should use the ConcurrentHashMap implementation
src/main/java/com/practica/utilidades/Utilidades.java:41:	UseConcurrentHashMap:	UseConcurrentHashMap: If you run in Java5 or newer and have concurrent access, you should use the ConcurrentHashMap implementation
src/main/java/com/practica/utilidades/Utilidades.java:41:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/main/java/com/practica/utilidades/Utilidades.java:41:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/main/java/com/practica/utilidades/Utilidades.java:48:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/utilidades/Utilidades.java:48:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/com/practica/utilidades/Utilidades.java:48:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'np1' is not assigned and could be declared final
src/main/java/com/practica/utilidades/Utilidades.java:48:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'np1' is not assigned and could be declared final
src/main/java/com/practica/utilidades/Utilidades.java:48:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'np2' is not assigned and could be declared final
src/main/java/com/practica/utilidades/Utilidades.java:48:	MethodArgumentCouldBeFinal:	MethodArgumentCouldBeFinal: Parameter 'np2' is not assigned and could be declared final
src/main/java/com/practica/utilidades/Utilidades.java:49:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'mapNodosPosicion' could be declared final
src/main/java/com/practica/utilidades/Utilidades.java:49:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'mapNodosPosicion' could be declared final
src/main/java/com/practica/utilidades/Utilidades.java:49:	UseConcurrentHashMap:	UseConcurrentHashMap: If you run in Java5 or newer and have concurrent access, you should use the ConcurrentHashMap implementation
src/main/java/com/practica/utilidades/Utilidades.java:49:	UseConcurrentHashMap:	UseConcurrentHashMap: If you run in Java5 or newer and have concurrent access, you should use the ConcurrentHashMap implementation
src/main/java/com/practica/utilidades/Utilidades.java:49:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/main/java/com/practica/utilidades/Utilidades.java:49:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/practica/ems/Test_1.java:17:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/practica/ems/Test_1.java:17:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/practica/ems/Test_1.java:17:	ClassNamingConventions:	ClassNamingConventions: The class name 'Test_1' doesn't match '[A-Z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_1.java:17:	ClassNamingConventions:	ClassNamingConventions: The class name 'Test_1' doesn't match '[A-Z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_1.java:17:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/practica/ems/Test_1.java:17:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/practica/ems/Test_1.java:17:	JUnit5TestShouldBePackagePrivate:	JUnit5TestShouldBePackagePrivate: JUnit 5 tests should be package-private.
src/test/java/com/practica/ems/Test_1.java:17:	JUnit5TestShouldBePackagePrivate:	JUnit5TestShouldBePackagePrivate: JUnit 5 tests should be package-private.
src/test/java/com/practica/ems/Test_1.java:17:	TooManyMethods:	TooManyMethods: This class has too many methods, consider refactoring it.
src/test/java/com/practica/ems/Test_1.java:17:	TooManyMethods:	TooManyMethods: This class has too many methods, consider refactoring it.
src/test/java/com/practica/ems/Test_1.java:19:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/practica/ems/Test_1.java:19:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/practica/ems/Test_1.java:22:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the setUp method if you want a default access modifier
src/test/java/com/practica/ems/Test_1.java:22:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the setUp method if you want a default access modifier
src/test/java/com/practica/ems/Test_1.java:23:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'test_data_str' could be declared final
src/test/java/com/practica/ems/Test_1.java:23:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'test_data_str' could be declared final
src/test/java/com/practica/ems/Test_1.java:23:	LocalVariableNamingConventions:	LocalVariableNamingConventions: The local variable name 'test_data_str' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_1.java:23:	LocalVariableNamingConventions:	LocalVariableNamingConventions: The local variable name 'test_data_str' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_1.java:23:	VariableNamingConventions:	VariableNamingConventions: Only variables that are final should contain underscores (except for underscores in standard prefix/suffix), 'test_data_str' is not final.
src/test/java/com/practica/ems/Test_1.java:23:	VariableNamingConventions:	VariableNamingConventions: Only variables that are final should contain underscores (except for underscores in standard prefix/suffix), 'test_data_str' is not final.
src/test/java/com/practica/ems/Test_1.java:35:	AvoidPrintStackTrace:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/test/java/com/practica/ems/Test_1.java:35:	AvoidPrintStackTrace:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/test/java/com/practica/ems/Test_1.java:42:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_1_1 method if you want a default access modifier
src/test/java/com/practica/ems/Test_1.java:42:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_1_1 method if you want a default access modifier
src/test/java/com/practica/ems/Test_1.java:42:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/practica/ems/Test_1.java:42:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/practica/ems/Test_1.java:42:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_1_1' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_1.java:42:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_1_1' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_1.java:55:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_1_2 method if you want a default access modifier
src/test/java/com/practica/ems/Test_1.java:55:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_1_2 method if you want a default access modifier
src/test/java/com/practica/ems/Test_1.java:55:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_1_2' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_1.java:55:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_1_2' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_1.java:65:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_1_3 method if you want a default access modifier
src/test/java/com/practica/ems/Test_1.java:65:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_1_3 method if you want a default access modifier
src/test/java/com/practica/ems/Test_1.java:65:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_1_3' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_1.java:65:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_1_3' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_1.java:74:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_1_5 method if you want a default access modifier
src/test/java/com/practica/ems/Test_1.java:74:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_1_5 method if you want a default access modifier
src/test/java/com/practica/ems/Test_1.java:74:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_1_5' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_1.java:74:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_1_5' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_1.java:85:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_1_6 method if you want a default access modifier
src/test/java/com/practica/ems/Test_1.java:85:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_1_6 method if you want a default access modifier
src/test/java/com/practica/ems/Test_1.java:85:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_1_6' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_1.java:85:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_1_6' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_1.java:93:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_1_7 method if you want a default access modifier
src/test/java/com/practica/ems/Test_1.java:93:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_1_7 method if you want a default access modifier
src/test/java/com/practica/ems/Test_1.java:93:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_1_7' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_1.java:93:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_1_7' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_1.java:98:	UnnecessaryFullyQualifiedName:	UnnecessaryFullyQualifiedName: Unnecessary use of fully qualified name 'Assertions.assertEquals' due to existing static import 'org.junit.jupiter.api.Assertions.assertEquals'
src/test/java/com/practica/ems/Test_1.java:98:	UnnecessaryFullyQualifiedName:	UnnecessaryFullyQualifiedName: Unnecessary use of fully qualified name 'Assertions.assertEquals' due to existing static import 'org.junit.jupiter.api.Assertions.assertEquals'
src/test/java/com/practica/ems/Test_1.java:101:	SystemPrintln:	SystemPrintln: System.out.println is used
src/test/java/com/practica/ems/Test_1.java:101:	SystemPrintln:	SystemPrintln: System.out.println is used
src/test/java/com/practica/ems/Test_1.java:107:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_1_8 method if you want a default access modifier
src/test/java/com/practica/ems/Test_1.java:107:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_1_8 method if you want a default access modifier
src/test/java/com/practica/ems/Test_1.java:107:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_1_8' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_1.java:107:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_1_8' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_1.java:110:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'localization' could be declared final
src/test/java/com/practica/ems/Test_1.java:110:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'localization' could be declared final
src/test/java/com/practica/ems/Test_1.java:110:	UseConcurrentHashMap:	UseConcurrentHashMap: If you run in Java5 or newer and have concurrent access, you should use the ConcurrentHashMap implementation
src/test/java/com/practica/ems/Test_1.java:110:	UseConcurrentHashMap:	UseConcurrentHashMap: If you run in Java5 or newer and have concurrent access, you should use the ConcurrentHashMap implementation
src/test/java/com/practica/ems/Test_1.java:110:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/practica/ems/Test_1.java:110:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/practica/ems/Test_1.java:114:	UnnecessaryFullyQualifiedName:	UnnecessaryFullyQualifiedName: Unnecessary use of fully qualified name 'Assertions.assertEquals' due to existing static import 'org.junit.jupiter.api.Assertions.assertEquals'
src/test/java/com/practica/ems/Test_1.java:114:	UnnecessaryFullyQualifiedName:	UnnecessaryFullyQualifiedName: Unnecessary use of fully qualified name 'Assertions.assertEquals' due to existing static import 'org.junit.jupiter.api.Assertions.assertEquals'
src/test/java/com/practica/ems/Test_1.java:117:	SystemPrintln:	SystemPrintln: System.out.println is used
src/test/java/com/practica/ems/Test_1.java:117:	SystemPrintln:	SystemPrintln: System.out.println is used
src/test/java/com/practica/ems/Test_1.java:123:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_1_9 method if you want a default access modifier
src/test/java/com/practica/ems/Test_1.java:123:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_1_9 method if you want a default access modifier
src/test/java/com/practica/ems/Test_1.java:123:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_1_9' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_1.java:123:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_1_9' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_1.java:124:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/practica/ems/Test_1.java:124:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/practica/ems/Test_1.java:130:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_1_10 method if you want a default access modifier
src/test/java/com/practica/ems/Test_1.java:130:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_1_10 method if you want a default access modifier
src/test/java/com/practica/ems/Test_1.java:130:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/practica/ems/Test_1.java:130:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/practica/ems/Test_1.java:130:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_1_10' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_1.java:130:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_1_10' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_1.java:132:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/practica/ems/Test_1.java:132:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/practica/ems/Test_1.java:139:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_1_11 method if you want a default access modifier
src/test/java/com/practica/ems/Test_1.java:139:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_1_11 method if you want a default access modifier
src/test/java/com/practica/ems/Test_1.java:139:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_1_11' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_1.java:139:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_1_11' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_1.java:141:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/practica/ems/Test_1.java:141:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/practica/ems/Test_1.java:141:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/practica/ems/Test_1.java:141:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/practica/ems/Test_1.java:143:	AvoidPrintStackTrace:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/test/java/com/practica/ems/Test_1.java:143:	AvoidPrintStackTrace:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/test/java/com/practica/ems/Test_1.java:149:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_1_12 method if you want a default access modifier
src/test/java/com/practica/ems/Test_1.java:149:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_1_12 method if you want a default access modifier
src/test/java/com/practica/ems/Test_1.java:149:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/practica/ems/Test_1.java:149:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/practica/ems/Test_1.java:149:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_1_12' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_1.java:149:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_1_12' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_1.java:151:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/practica/ems/Test_1.java:151:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/practica/ems/Test_1.java:157:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_1_13 method if you want a default access modifier
src/test/java/com/practica/ems/Test_1.java:157:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_1_13 method if you want a default access modifier
src/test/java/com/practica/ems/Test_1.java:157:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_1_13' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_1.java:157:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_1_13' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_1.java:165:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_1_14 method if you want a default access modifier
src/test/java/com/practica/ems/Test_1.java:165:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_1_14 method if you want a default access modifier
src/test/java/com/practica/ems/Test_1.java:165:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_1_14' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_1.java:165:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_1_14' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_1.java:167:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/practica/ems/Test_1.java:167:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/practica/ems/Test_1.java:167:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/practica/ems/Test_1.java:167:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/practica/ems/Test_1.java:167:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/practica/ems/Test_1.java:167:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/practica/ems/Test_2.java:4:	DuplicateImports:	DuplicateImports: Avoid duplicate imports such as 'org.junit.jupiter.api.Assertions.assertThrows'
src/test/java/com/practica/ems/Test_2.java:4:	DuplicateImports:	DuplicateImports: Avoid duplicate imports such as 'org.junit.jupiter.api.Assertions.assertThrows'
src/test/java/com/practica/ems/Test_2.java:18:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/practica/ems/Test_2.java:18:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/practica/ems/Test_2.java:18:	ClassNamingConventions:	ClassNamingConventions: The class name 'Test_2' doesn't match '[A-Z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_2.java:18:	ClassNamingConventions:	ClassNamingConventions: The class name 'Test_2' doesn't match '[A-Z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_2.java:18:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/practica/ems/Test_2.java:18:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/practica/ems/Test_2.java:18:	JUnit5TestShouldBePackagePrivate:	JUnit5TestShouldBePackagePrivate: JUnit 5 tests should be package-private.
src/test/java/com/practica/ems/Test_2.java:18:	JUnit5TestShouldBePackagePrivate:	JUnit5TestShouldBePackagePrivate: JUnit 5 tests should be package-private.
src/test/java/com/practica/ems/Test_2.java:18:	TooManyMethods:	TooManyMethods: This class has too many methods, consider refactoring it.
src/test/java/com/practica/ems/Test_2.java:18:	TooManyMethods:	TooManyMethods: This class has too many methods, consider refactoring it.
src/test/java/com/practica/ems/Test_2.java:20:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/practica/ems/Test_2.java:20:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/practica/ems/Test_2.java:23:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the setUp method if you want a default access modifier
src/test/java/com/practica/ems/Test_2.java:23:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the setUp method if you want a default access modifier
src/test/java/com/practica/ems/Test_2.java:30:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_1_1 method if you want a default access modifier
src/test/java/com/practica/ems/Test_2.java:30:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_1_1 method if you want a default access modifier
src/test/java/com/practica/ems/Test_2.java:30:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/practica/ems/Test_2.java:30:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/practica/ems/Test_2.java:30:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_1_1' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_2.java:30:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_1_1' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_2.java:42:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_1_2 method if you want a default access modifier
src/test/java/com/practica/ems/Test_2.java:42:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_1_2 method if you want a default access modifier
src/test/java/com/practica/ems/Test_2.java:42:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_1_2' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_2.java:42:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_1_2' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_2.java:52:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_1_3 method if you want a default access modifier
src/test/java/com/practica/ems/Test_2.java:52:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_1_3 method if you want a default access modifier
src/test/java/com/practica/ems/Test_2.java:52:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_1_3' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_2.java:52:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_1_3' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_2.java:60:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_1_5 method if you want a default access modifier
src/test/java/com/practica/ems/Test_2.java:60:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_1_5 method if you want a default access modifier
src/test/java/com/practica/ems/Test_2.java:60:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_1_5' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_2.java:60:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_1_5' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_2.java:70:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_1_6 method if you want a default access modifier
src/test/java/com/practica/ems/Test_2.java:70:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_1_6 method if you want a default access modifier
src/test/java/com/practica/ems/Test_2.java:70:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_1_6' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_2.java:70:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_1_6' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_2.java:78:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_1_7 method if you want a default access modifier
src/test/java/com/practica/ems/Test_2.java:78:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_1_7 method if you want a default access modifier
src/test/java/com/practica/ems/Test_2.java:78:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_1_7' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_2.java:78:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_1_7' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_2.java:83:	UnnecessaryFullyQualifiedName:	UnnecessaryFullyQualifiedName: Unnecessary use of fully qualified name 'Assertions.assertEquals' due to existing static import 'org.junit.jupiter.api.Assertions.*'
src/test/java/com/practica/ems/Test_2.java:83:	UnnecessaryFullyQualifiedName:	UnnecessaryFullyQualifiedName: Unnecessary use of fully qualified name 'Assertions.assertEquals' due to existing static import 'org.junit.jupiter.api.Assertions.*'
src/test/java/com/practica/ems/Test_2.java:86:	SystemPrintln:	SystemPrintln: System.out.println is used
src/test/java/com/practica/ems/Test_2.java:86:	SystemPrintln:	SystemPrintln: System.out.println is used
src/test/java/com/practica/ems/Test_2.java:92:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_1_8 method if you want a default access modifier
src/test/java/com/practica/ems/Test_2.java:92:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_1_8 method if you want a default access modifier
src/test/java/com/practica/ems/Test_2.java:92:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_1_8' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_2.java:92:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_1_8' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_2.java:95:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'localization' could be declared final
src/test/java/com/practica/ems/Test_2.java:95:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'localization' could be declared final
src/test/java/com/practica/ems/Test_2.java:95:	UseConcurrentHashMap:	UseConcurrentHashMap: If you run in Java5 or newer and have concurrent access, you should use the ConcurrentHashMap implementation
src/test/java/com/practica/ems/Test_2.java:95:	UseConcurrentHashMap:	UseConcurrentHashMap: If you run in Java5 or newer and have concurrent access, you should use the ConcurrentHashMap implementation
src/test/java/com/practica/ems/Test_2.java:95:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/practica/ems/Test_2.java:95:	UseDiamondOperator:	UseDiamondOperator: Explicit type arguments can be replaced by Diamond Operator
src/test/java/com/practica/ems/Test_2.java:99:	UnnecessaryFullyQualifiedName:	UnnecessaryFullyQualifiedName: Unnecessary use of fully qualified name 'Assertions.assertEquals' due to existing static import 'org.junit.jupiter.api.Assertions.*'
src/test/java/com/practica/ems/Test_2.java:99:	UnnecessaryFullyQualifiedName:	UnnecessaryFullyQualifiedName: Unnecessary use of fully qualified name 'Assertions.assertEquals' due to existing static import 'org.junit.jupiter.api.Assertions.*'
src/test/java/com/practica/ems/Test_2.java:102:	SystemPrintln:	SystemPrintln: System.out.println is used
src/test/java/com/practica/ems/Test_2.java:102:	SystemPrintln:	SystemPrintln: System.out.println is used
src/test/java/com/practica/ems/Test_2.java:108:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_1_9 method if you want a default access modifier
src/test/java/com/practica/ems/Test_2.java:108:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_1_9 method if you want a default access modifier
src/test/java/com/practica/ems/Test_2.java:108:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_1_9' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_2.java:108:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_1_9' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_2.java:109:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/practica/ems/Test_2.java:109:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/practica/ems/Test_2.java:115:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_1_10 method if you want a default access modifier
src/test/java/com/practica/ems/Test_2.java:115:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_1_10 method if you want a default access modifier
src/test/java/com/practica/ems/Test_2.java:115:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/practica/ems/Test_2.java:115:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/practica/ems/Test_2.java:115:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_1_10' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_2.java:115:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_1_10' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_2.java:117:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/practica/ems/Test_2.java:117:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/practica/ems/Test_2.java:124:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_1_11 method if you want a default access modifier
src/test/java/com/practica/ems/Test_2.java:124:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_1_11 method if you want a default access modifier
src/test/java/com/practica/ems/Test_2.java:124:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_1_11' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_2.java:124:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_1_11' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_2.java:126:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/practica/ems/Test_2.java:126:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/practica/ems/Test_2.java:126:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/practica/ems/Test_2.java:126:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/practica/ems/Test_2.java:128:	AvoidPrintStackTrace:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/test/java/com/practica/ems/Test_2.java:128:	AvoidPrintStackTrace:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/test/java/com/practica/ems/Test_2.java:134:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_1_12 method if you want a default access modifier
src/test/java/com/practica/ems/Test_2.java:134:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_1_12 method if you want a default access modifier
src/test/java/com/practica/ems/Test_2.java:134:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/practica/ems/Test_2.java:134:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/practica/ems/Test_2.java:134:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_1_12' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_2.java:134:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_1_12' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_2.java:136:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/practica/ems/Test_2.java:136:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/practica/ems/Test_2.java:142:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_1_13 method if you want a default access modifier
src/test/java/com/practica/ems/Test_2.java:142:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_1_13 method if you want a default access modifier
src/test/java/com/practica/ems/Test_2.java:142:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_1_13' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_2.java:142:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_1_13' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_2.java:150:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_1_14 method if you want a default access modifier
src/test/java/com/practica/ems/Test_2.java:150:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_1_14 method if you want a default access modifier
src/test/java/com/practica/ems/Test_2.java:150:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_1_14' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_2.java:150:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_1_14' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_2.java:152:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/practica/ems/Test_2.java:152:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/practica/ems/Test_2.java:152:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/practica/ems/Test_2.java:152:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/practica/ems/Test_2.java:152:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/practica/ems/Test_2.java:152:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/practica/ems/Test_3.java:16:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/practica/ems/Test_3.java:16:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/com/practica/ems/Test_3.java:16:	ClassNamingConventions:	ClassNamingConventions: The class name 'Test_3' doesn't match '[A-Z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_3.java:16:	ClassNamingConventions:	ClassNamingConventions: The class name 'Test_3' doesn't match '[A-Z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_3.java:16:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/practica/ems/Test_3.java:16:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/com/practica/ems/Test_3.java:16:	JUnit5TestShouldBePackagePrivate:	JUnit5TestShouldBePackagePrivate: JUnit 5 tests should be package-private.
src/test/java/com/practica/ems/Test_3.java:16:	JUnit5TestShouldBePackagePrivate:	JUnit5TestShouldBePackagePrivate: JUnit 5 tests should be package-private.
src/test/java/com/practica/ems/Test_3.java:16:	TooManyMethods:	TooManyMethods: This class has too many methods, consider refactoring it.
src/test/java/com/practica/ems/Test_3.java:16:	TooManyMethods:	TooManyMethods: This class has too many methods, consider refactoring it.
src/test/java/com/practica/ems/Test_3.java:17:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/practica/ems/Test_3.java:17:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/com/practica/ems/Test_3.java:20:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the setUp method if you want a default access modifier
src/test/java/com/practica/ems/Test_3.java:20:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the setUp method if you want a default access modifier
src/test/java/com/practica/ems/Test_3.java:26:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_1 method if you want a default access modifier
src/test/java/com/practica/ems/Test_3.java:26:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_1 method if you want a default access modifier
src/test/java/com/practica/ems/Test_3.java:26:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_1' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_3.java:26:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_1' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_3.java:27:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/practica/ems/Test_3.java:27:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/practica/ems/Test_3.java:32:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_2 method if you want a default access modifier
src/test/java/com/practica/ems/Test_3.java:32:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_2 method if you want a default access modifier
src/test/java/com/practica/ems/Test_3.java:32:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_2' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_3.java:32:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_2' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_3.java:33:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/practica/ems/Test_3.java:33:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/practica/ems/Test_3.java:33:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/practica/ems/Test_3.java:33:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/practica/ems/Test_3.java:38:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_3 method if you want a default access modifier
src/test/java/com/practica/ems/Test_3.java:38:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_3 method if you want a default access modifier
src/test/java/com/practica/ems/Test_3.java:38:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_3' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_3.java:38:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_3' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_3.java:39:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/practica/ems/Test_3.java:39:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/practica/ems/Test_3.java:39:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/practica/ems/Test_3.java:39:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/practica/ems/Test_3.java:44:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_4 method if you want a default access modifier
src/test/java/com/practica/ems/Test_3.java:44:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_4 method if you want a default access modifier
src/test/java/com/practica/ems/Test_3.java:44:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_4' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_3.java:44:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_4' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_3.java:46:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/practica/ems/Test_3.java:46:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/practica/ems/Test_3.java:46:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/practica/ems/Test_3.java:46:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/practica/ems/Test_3.java:51:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_5 method if you want a default access modifier
src/test/java/com/practica/ems/Test_3.java:51:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_5 method if you want a default access modifier
src/test/java/com/practica/ems/Test_3.java:51:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_5' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_3.java:51:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_5' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_3.java:52:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/practica/ems/Test_3.java:52:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/practica/ems/Test_3.java:52:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'tam_ant' could be declared final
src/test/java/com/practica/ems/Test_3.java:52:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'tam_ant' could be declared final
src/test/java/com/practica/ems/Test_3.java:52:	LocalVariableNamingConventions:	LocalVariableNamingConventions: The local variable name 'tam_ant' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_3.java:52:	LocalVariableNamingConventions:	LocalVariableNamingConventions: The local variable name 'tam_ant' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_3.java:52:	VariableNamingConventions:	VariableNamingConventions: Only variables that are final should contain underscores (except for underscores in standard prefix/suffix), 'tam_ant' is not final.
src/test/java/com/practica/ems/Test_3.java:52:	VariableNamingConventions:	VariableNamingConventions: Only variables that are final should contain underscores (except for underscores in standard prefix/suffix), 'tam_ant' is not final.
src/test/java/com/practica/ems/Test_3.java:54:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/practica/ems/Test_3.java:54:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/practica/ems/Test_3.java:54:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/practica/ems/Test_3.java:54:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/practica/ems/Test_3.java:54:	UselessParentheses:	UselessParentheses: Useless parentheses.
src/test/java/com/practica/ems/Test_3.java:54:	UselessParentheses:	UselessParentheses: Useless parentheses.
src/test/java/com/practica/ems/Test_3.java:59:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_6 method if you want a default access modifier
src/test/java/com/practica/ems/Test_3.java:59:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_6 method if you want a default access modifier
src/test/java/com/practica/ems/Test_3.java:59:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_6' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_3.java:59:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_6' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_3.java:61:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/practica/ems/Test_3.java:61:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/practica/ems/Test_3.java:61:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/practica/ems/Test_3.java:61:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/practica/ems/Test_3.java:66:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_7 method if you want a default access modifier
src/test/java/com/practica/ems/Test_3.java:66:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_7 method if you want a default access modifier
src/test/java/com/practica/ems/Test_3.java:66:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_7' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_3.java:66:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_7' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_3.java:68:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/practica/ems/Test_3.java:68:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/practica/ems/Test_3.java:68:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/practica/ems/Test_3.java:68:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/practica/ems/Test_3.java:73:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_8 method if you want a default access modifier
src/test/java/com/practica/ems/Test_3.java:73:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_8 method if you want a default access modifier
src/test/java/com/practica/ems/Test_3.java:73:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_8' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_3.java:73:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_8' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_3.java:74:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'ini' could be declared final
src/test/java/com/practica/ems/Test_3.java:74:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'ini' could be declared final
src/test/java/com/practica/ems/Test_3.java:75:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'fin' could be declared final
src/test/java/com/practica/ems/Test_3.java:75:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'fin' could be declared final
src/test/java/com/practica/ems/Test_3.java:76:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/practica/ems/Test_3.java:76:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/practica/ems/Test_3.java:76:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/practica/ems/Test_3.java:76:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/practica/ems/Test_3.java:81:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_9 method if you want a default access modifier
src/test/java/com/practica/ems/Test_3.java:81:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_9 method if you want a default access modifier
src/test/java/com/practica/ems/Test_3.java:81:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_9' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_3.java:81:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_9' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_3.java:82:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'ini' could be declared final
src/test/java/com/practica/ems/Test_3.java:82:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'ini' could be declared final
src/test/java/com/practica/ems/Test_3.java:83:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'fin' could be declared final
src/test/java/com/practica/ems/Test_3.java:83:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'fin' could be declared final
src/test/java/com/practica/ems/Test_3.java:84:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/practica/ems/Test_3.java:84:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/practica/ems/Test_3.java:84:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/practica/ems/Test_3.java:84:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/practica/ems/Test_3.java:89:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_10 method if you want a default access modifier
src/test/java/com/practica/ems/Test_3.java:89:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_10 method if you want a default access modifier
src/test/java/com/practica/ems/Test_3.java:89:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_10' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_3.java:89:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_10' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_3.java:90:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'ini' could be declared final
src/test/java/com/practica/ems/Test_3.java:90:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'ini' could be declared final
src/test/java/com/practica/ems/Test_3.java:91:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'fin' could be declared final
src/test/java/com/practica/ems/Test_3.java:91:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'fin' could be declared final
src/test/java/com/practica/ems/Test_3.java:92:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/practica/ems/Test_3.java:92:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/practica/ems/Test_3.java:92:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/practica/ems/Test_3.java:92:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/practica/ems/Test_3.java:97:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_11 method if you want a default access modifier
src/test/java/com/practica/ems/Test_3.java:97:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_11 method if you want a default access modifier
src/test/java/com/practica/ems/Test_3.java:97:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/practica/ems/Test_3.java:97:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/practica/ems/Test_3.java:97:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_11' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_3.java:97:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_11' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_3.java:98:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'ini' could be declared final
src/test/java/com/practica/ems/Test_3.java:98:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'ini' could be declared final
src/test/java/com/practica/ems/Test_3.java:99:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'fin' could be declared final
src/test/java/com/practica/ems/Test_3.java:99:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'fin' could be declared final
src/test/java/com/practica/ems/Test_3.java:100:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/practica/ems/Test_3.java:100:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/practica/ems/Test_3.java:100:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/practica/ems/Test_3.java:100:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/practica/ems/Test_3.java:101:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/practica/ems/Test_3.java:101:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/practica/ems/Test_3.java:101:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/practica/ems/Test_3.java:101:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/practica/ems/Test_3.java:106:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_12 method if you want a default access modifier
src/test/java/com/practica/ems/Test_3.java:106:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test_12 method if you want a default access modifier
src/test/java/com/practica/ems/Test_3.java:106:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/practica/ems/Test_3.java:106:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/com/practica/ems/Test_3.java:106:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_12' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_3.java:106:	MethodNamingConventions:	MethodNamingConventions: The JUnit 5 test method name 'test_12' doesn't match '[a-z][a-zA-Z0-9]*'
src/test/java/com/practica/ems/Test_3.java:107:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'ini' could be declared final
src/test/java/com/practica/ems/Test_3.java:107:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'ini' could be declared final
src/test/java/com/practica/ems/Test_3.java:108:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'fin' could be declared final
src/test/java/com/practica/ems/Test_3.java:108:	LocalVariableCouldBeFinal:	LocalVariableCouldBeFinal: Local variable 'fin' could be declared final
src/test/java/com/practica/ems/Test_3.java:109:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/practica/ems/Test_3.java:109:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/practica/ems/Test_3.java:109:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/practica/ems/Test_3.java:109:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/practica/ems/Test_3.java:111:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/practica/ems/Test_3.java:111:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/com/practica/ems/Test_3.java:111:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/test/java/com/practica/ems/Test_3.java:111:	LawOfDemeter:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
